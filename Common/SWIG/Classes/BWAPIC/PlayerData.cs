//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.5
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace SWIG.BWAPIC {
 
	// defaults
	using System; 
	using System.Runtime.InteropServices; 
	// BWAPI
	using BWAPI;

public partial class PlayerData : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal PlayerData(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(PlayerData obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~PlayerData() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          bwapiclientPINVOKE.delete_PlayerData(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  
public override int GetHashCode()
{
   return this.swigCPtr.Handle.GetHashCode();
}

public override bool Equals(object obj)
{
    bool equal = false;
    if (obj is PlayerData)
      equal = (((PlayerData)obj).swigCPtr.Handle == this.swigCPtr.Handle);
    return equal;
}
  
public bool Equals(PlayerData obj) 
{
    if (obj == null) return false;
    return (obj.swigCPtr.Handle == this.swigCPtr.Handle);
}

public static bool operator ==(PlayerData obj1, PlayerData obj2)
{
    if (object.ReferenceEquals(obj1, obj2)) return true;
    if (object.ReferenceEquals(obj1, null)) return false;
    if (object.ReferenceEquals(obj2, null)) return false;
   
    return obj1.Equals(obj2);
}

public static bool operator !=(PlayerData obj1, PlayerData obj2)
{
    if (object.ReferenceEquals(obj1, obj2)) return false;
    if (object.ReferenceEquals(obj1, null)) return true;
    if (object.ReferenceEquals(obj2, null)) return true;

    return !obj1.Equals(obj2);
}




  public string name {
    set {
      bwapiclientPINVOKE.PlayerData_name_set(swigCPtr, value);
    } 
    get {
      string ret = bwapiclientPINVOKE.PlayerData_name_get(swigCPtr);
      return ret;
    } 
  }

  public int race {
    set {
      bwapiclientPINVOKE.PlayerData_race_set(swigCPtr, value);
    } 
    get {
      int ret = bwapiclientPINVOKE.PlayerData_race_get(swigCPtr);
      return ret;
    } 
  }

  public int type {
    set {
      bwapiclientPINVOKE.PlayerData_type_set(swigCPtr, value);
    } 
    get {
      int ret = bwapiclientPINVOKE.PlayerData_type_get(swigCPtr);
      return ret;
    } 
  }

  public int force {
    set {
      bwapiclientPINVOKE.PlayerData_force_set(swigCPtr, value);
    } 
    get {
      int ret = bwapiclientPINVOKE.PlayerData_force_get(swigCPtr);
      return ret;
    } 
  }

  public SWIGTYPE_p_bool isAlly {
    set {
      bwapiclientPINVOKE.PlayerData_isAlly_set(swigCPtr, SWIGTYPE_p_bool.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = bwapiclientPINVOKE.PlayerData_isAlly_get(swigCPtr);
      SWIGTYPE_p_bool ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_bool(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_bool isEnemy {
    set {
      bwapiclientPINVOKE.PlayerData_isEnemy_set(swigCPtr, SWIGTYPE_p_bool.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = bwapiclientPINVOKE.PlayerData_isEnemy_get(swigCPtr);
      SWIGTYPE_p_bool ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_bool(cPtr, false);
      return ret;
    } 
  }

  public bool isNeutral {
    set {
      bwapiclientPINVOKE.PlayerData_isNeutral_set(swigCPtr, value);
    } 
    get {
      bool ret = bwapiclientPINVOKE.PlayerData_isNeutral_get(swigCPtr);
      return ret;
    } 
  }

  public int startLocationX {
    set {
      bwapiclientPINVOKE.PlayerData_startLocationX_set(swigCPtr, value);
    } 
    get {
      int ret = bwapiclientPINVOKE.PlayerData_startLocationX_get(swigCPtr);
      return ret;
    } 
  }

  public int startLocationY {
    set {
      bwapiclientPINVOKE.PlayerData_startLocationY_set(swigCPtr, value);
    } 
    get {
      int ret = bwapiclientPINVOKE.PlayerData_startLocationY_get(swigCPtr);
      return ret;
    } 
  }

  public bool isVictorious {
    set {
      bwapiclientPINVOKE.PlayerData_isVictorious_set(swigCPtr, value);
    } 
    get {
      bool ret = bwapiclientPINVOKE.PlayerData_isVictorious_get(swigCPtr);
      return ret;
    } 
  }

  public bool isDefeated {
    set {
      bwapiclientPINVOKE.PlayerData_isDefeated_set(swigCPtr, value);
    } 
    get {
      bool ret = bwapiclientPINVOKE.PlayerData_isDefeated_get(swigCPtr);
      return ret;
    } 
  }

  public bool leftGame {
    set {
      bwapiclientPINVOKE.PlayerData_leftGame_set(swigCPtr, value);
    } 
    get {
      bool ret = bwapiclientPINVOKE.PlayerData_leftGame_get(swigCPtr);
      return ret;
    } 
  }

  public bool isParticipating {
    set {
      bwapiclientPINVOKE.PlayerData_isParticipating_set(swigCPtr, value);
    } 
    get {
      bool ret = bwapiclientPINVOKE.PlayerData_isParticipating_get(swigCPtr);
      return ret;
    } 
  }

  public int minerals {
    set {
      bwapiclientPINVOKE.PlayerData_minerals_set(swigCPtr, value);
    } 
    get {
      int ret = bwapiclientPINVOKE.PlayerData_minerals_get(swigCPtr);
      return ret;
    } 
  }

  public int gas {
    set {
      bwapiclientPINVOKE.PlayerData_gas_set(swigCPtr, value);
    } 
    get {
      int ret = bwapiclientPINVOKE.PlayerData_gas_get(swigCPtr);
      return ret;
    } 
  }

  public int gatheredMinerals {
    set {
      bwapiclientPINVOKE.PlayerData_gatheredMinerals_set(swigCPtr, value);
    } 
    get {
      int ret = bwapiclientPINVOKE.PlayerData_gatheredMinerals_get(swigCPtr);
      return ret;
    } 
  }

  public int gatheredGas {
    set {
      bwapiclientPINVOKE.PlayerData_gatheredGas_set(swigCPtr, value);
    } 
    get {
      int ret = bwapiclientPINVOKE.PlayerData_gatheredGas_get(swigCPtr);
      return ret;
    } 
  }

  public int repairedMinerals {
    set {
      bwapiclientPINVOKE.PlayerData_repairedMinerals_set(swigCPtr, value);
    } 
    get {
      int ret = bwapiclientPINVOKE.PlayerData_repairedMinerals_get(swigCPtr);
      return ret;
    } 
  }

  public int repairedGas {
    set {
      bwapiclientPINVOKE.PlayerData_repairedGas_set(swigCPtr, value);
    } 
    get {
      int ret = bwapiclientPINVOKE.PlayerData_repairedGas_get(swigCPtr);
      return ret;
    } 
  }

  public int refundedMinerals {
    set {
      bwapiclientPINVOKE.PlayerData_refundedMinerals_set(swigCPtr, value);
    } 
    get {
      int ret = bwapiclientPINVOKE.PlayerData_refundedMinerals_get(swigCPtr);
      return ret;
    } 
  }

  public int refundedGas {
    set {
      bwapiclientPINVOKE.PlayerData_refundedGas_set(swigCPtr, value);
    } 
    get {
      int ret = bwapiclientPINVOKE.PlayerData_refundedGas_get(swigCPtr);
      return ret;
    } 
  }

  public SWIGTYPE_p_int supplyTotal {
    set {
      bwapiclientPINVOKE.PlayerData_supplyTotal_set(swigCPtr, SWIGTYPE_p_int.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = bwapiclientPINVOKE.PlayerData_supplyTotal_get(swigCPtr);
      SWIGTYPE_p_int ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_int(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_int supplyUsed {
    set {
      bwapiclientPINVOKE.PlayerData_supplyUsed_set(swigCPtr, SWIGTYPE_p_int.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = bwapiclientPINVOKE.PlayerData_supplyUsed_get(swigCPtr);
      SWIGTYPE_p_int ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_int(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_int allUnitCount {
    set {
      bwapiclientPINVOKE.PlayerData_allUnitCount_set(swigCPtr, SWIGTYPE_p_int.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = bwapiclientPINVOKE.PlayerData_allUnitCount_get(swigCPtr);
      SWIGTYPE_p_int ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_int(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_int visibleUnitCount {
    set {
      bwapiclientPINVOKE.PlayerData_visibleUnitCount_set(swigCPtr, SWIGTYPE_p_int.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = bwapiclientPINVOKE.PlayerData_visibleUnitCount_get(swigCPtr);
      SWIGTYPE_p_int ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_int(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_int completedUnitCount {
    set {
      bwapiclientPINVOKE.PlayerData_completedUnitCount_set(swigCPtr, SWIGTYPE_p_int.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = bwapiclientPINVOKE.PlayerData_completedUnitCount_get(swigCPtr);
      SWIGTYPE_p_int ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_int(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_int deadUnitCount {
    set {
      bwapiclientPINVOKE.PlayerData_deadUnitCount_set(swigCPtr, SWIGTYPE_p_int.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = bwapiclientPINVOKE.PlayerData_deadUnitCount_get(swigCPtr);
      SWIGTYPE_p_int ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_int(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_int killedUnitCount {
    set {
      bwapiclientPINVOKE.PlayerData_killedUnitCount_set(swigCPtr, SWIGTYPE_p_int.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = bwapiclientPINVOKE.PlayerData_killedUnitCount_get(swigCPtr);
      SWIGTYPE_p_int ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_int(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_int upgradeLevel {
    set {
      bwapiclientPINVOKE.PlayerData_upgradeLevel_set(swigCPtr, SWIGTYPE_p_int.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = bwapiclientPINVOKE.PlayerData_upgradeLevel_get(swigCPtr);
      SWIGTYPE_p_int ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_int(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_bool hasResearched {
    set {
      bwapiclientPINVOKE.PlayerData_hasResearched_set(swigCPtr, SWIGTYPE_p_bool.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = bwapiclientPINVOKE.PlayerData_hasResearched_get(swigCPtr);
      SWIGTYPE_p_bool ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_bool(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_bool isResearching {
    set {
      bwapiclientPINVOKE.PlayerData_isResearching_set(swigCPtr, SWIGTYPE_p_bool.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = bwapiclientPINVOKE.PlayerData_isResearching_get(swigCPtr);
      SWIGTYPE_p_bool ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_bool(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_bool isUpgrading {
    set {
      bwapiclientPINVOKE.PlayerData_isUpgrading_set(swigCPtr, SWIGTYPE_p_bool.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = bwapiclientPINVOKE.PlayerData_isUpgrading_get(swigCPtr);
      SWIGTYPE_p_bool ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_bool(cPtr, false);
      return ret;
    } 
  }

  public int colorByte {
    set {
      bwapiclientPINVOKE.PlayerData_colorByte_set(swigCPtr, value);
    } 
    get {
      int ret = bwapiclientPINVOKE.PlayerData_colorByte_get(swigCPtr);
      return ret;
    } 
  }

  public int color {
    set {
      bwapiclientPINVOKE.PlayerData_color_set(swigCPtr, value);
    } 
    get {
      int ret = bwapiclientPINVOKE.PlayerData_color_get(swigCPtr);
      return ret;
    } 
  }

  public int totalUnitScore {
    set {
      bwapiclientPINVOKE.PlayerData_totalUnitScore_set(swigCPtr, value);
    } 
    get {
      int ret = bwapiclientPINVOKE.PlayerData_totalUnitScore_get(swigCPtr);
      return ret;
    } 
  }

  public int totalKillScore {
    set {
      bwapiclientPINVOKE.PlayerData_totalKillScore_set(swigCPtr, value);
    } 
    get {
      int ret = bwapiclientPINVOKE.PlayerData_totalKillScore_get(swigCPtr);
      return ret;
    } 
  }

  public int totalBuildingScore {
    set {
      bwapiclientPINVOKE.PlayerData_totalBuildingScore_set(swigCPtr, value);
    } 
    get {
      int ret = bwapiclientPINVOKE.PlayerData_totalBuildingScore_get(swigCPtr);
      return ret;
    } 
  }

  public int totalRazingScore {
    set {
      bwapiclientPINVOKE.PlayerData_totalRazingScore_set(swigCPtr, value);
    } 
    get {
      int ret = bwapiclientPINVOKE.PlayerData_totalRazingScore_get(swigCPtr);
      return ret;
    } 
  }

  public int customScore {
    set {
      bwapiclientPINVOKE.PlayerData_customScore_set(swigCPtr, value);
    } 
    get {
      int ret = bwapiclientPINVOKE.PlayerData_customScore_get(swigCPtr);
      return ret;
    } 
  }

  public SWIGTYPE_p_int maxUpgradeLevel {
    set {
      bwapiclientPINVOKE.PlayerData_maxUpgradeLevel_set(swigCPtr, SWIGTYPE_p_int.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = bwapiclientPINVOKE.PlayerData_maxUpgradeLevel_get(swigCPtr);
      SWIGTYPE_p_int ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_int(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_bool isResearchAvailable {
    set {
      bwapiclientPINVOKE.PlayerData_isResearchAvailable_set(swigCPtr, SWIGTYPE_p_bool.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = bwapiclientPINVOKE.PlayerData_isResearchAvailable_get(swigCPtr);
      SWIGTYPE_p_bool ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_bool(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_bool isUnitAvailable {
    set {
      bwapiclientPINVOKE.PlayerData_isUnitAvailable_set(swigCPtr, SWIGTYPE_p_bool.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = bwapiclientPINVOKE.PlayerData_isUnitAvailable_get(swigCPtr);
      SWIGTYPE_p_bool ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_bool(cPtr, false);
      return ret;
    } 
  }

  public PlayerData() : this(bwapiclientPINVOKE.new_PlayerData(), true) {
  }

}

}
