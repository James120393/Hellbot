//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.5
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace SWIG.BWAPI {

public partial class UnitCommand : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal UnitCommand(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(UnitCommand obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~UnitCommand() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          bwapiPINVOKE.delete_UnitCommand(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  
public override int GetHashCode()
{
   return this.swigCPtr.Handle.GetHashCode();
}

public override bool Equals(object obj)
{
    bool equal = false;
    if (obj is UnitCommand)
      equal = (((UnitCommand)obj).swigCPtr.Handle == this.swigCPtr.Handle);
    return equal;
}
  
public bool Equals(UnitCommand obj) 
{
    if (obj == null) return false;
    return (obj.swigCPtr.Handle == this.swigCPtr.Handle);
}

public static bool operator ==(UnitCommand obj1, UnitCommand obj2)
{
    if (object.ReferenceEquals(obj1, obj2)) return true;
    if (object.ReferenceEquals(obj1, null)) return false;
    if (object.ReferenceEquals(obj2, null)) return false;
   
    return obj1.Equals(obj2);
}

public static bool operator !=(UnitCommand obj1, UnitCommand obj2)
{
    if (object.ReferenceEquals(obj1, obj2)) return false;
    if (object.ReferenceEquals(obj1, null)) return true;
    if (object.ReferenceEquals(obj2, null)) return true;

    return !obj1.Equals(obj2);
}




  public UnitCommand() : this(bwapiPINVOKE.new_UnitCommand__SWIG_0(), true) {
  }

  public UnitCommand(Unit _unit, UnitCommandType _type, Unit _target, int _x, int _y, int _extra) : this(bwapiPINVOKE.new_UnitCommand__SWIG_1(Unit.getCPtr(_unit), UnitCommandType.getCPtr(_type), Unit.getCPtr(_target), _x, _y, _extra), true) {
    if (bwapiPINVOKE.SWIGPendingException.Pending) throw bwapiPINVOKE.SWIGPendingException.Retrieve();
  }

  public static UnitCommand attack(Unit unit, Position target, bool shiftQueueCommand) {
    UnitCommand ret = new UnitCommand(bwapiPINVOKE.UnitCommand_attack__SWIG_0(Unit.getCPtr(unit), Position.getCPtr(target), shiftQueueCommand), true);
    if (bwapiPINVOKE.SWIGPendingException.Pending) throw bwapiPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static UnitCommand attack(Unit unit, Position target) {
    UnitCommand ret = new UnitCommand(bwapiPINVOKE.UnitCommand_attack__SWIG_1(Unit.getCPtr(unit), Position.getCPtr(target)), true);
    if (bwapiPINVOKE.SWIGPendingException.Pending) throw bwapiPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static UnitCommand attack(Unit unit, Unit target, bool shiftQueueCommand) {
    UnitCommand ret = new UnitCommand(bwapiPINVOKE.UnitCommand_attack__SWIG_2(Unit.getCPtr(unit), Unit.getCPtr(target), shiftQueueCommand), true);
    return ret;
  }

  public static UnitCommand attack(Unit unit, Unit target) {
    UnitCommand ret = new UnitCommand(bwapiPINVOKE.UnitCommand_attack__SWIG_3(Unit.getCPtr(unit), Unit.getCPtr(target)), true);
    return ret;
  }

  public static UnitCommand build(Unit unit, TilePosition target, UnitType type) {
    UnitCommand ret = new UnitCommand(bwapiPINVOKE.UnitCommand_build(Unit.getCPtr(unit), TilePosition.getCPtr(target), UnitType.getCPtr(type)), true);
    if (bwapiPINVOKE.SWIGPendingException.Pending) throw bwapiPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static UnitCommand buildAddon(Unit unit, UnitType type) {
    UnitCommand ret = new UnitCommand(bwapiPINVOKE.UnitCommand_buildAddon(Unit.getCPtr(unit), UnitType.getCPtr(type)), true);
    if (bwapiPINVOKE.SWIGPendingException.Pending) throw bwapiPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static UnitCommand train(Unit unit, UnitType type) {
    UnitCommand ret = new UnitCommand(bwapiPINVOKE.UnitCommand_train(Unit.getCPtr(unit), UnitType.getCPtr(type)), true);
    if (bwapiPINVOKE.SWIGPendingException.Pending) throw bwapiPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static UnitCommand morph(Unit unit, UnitType type) {
    UnitCommand ret = new UnitCommand(bwapiPINVOKE.UnitCommand_morph(Unit.getCPtr(unit), UnitType.getCPtr(type)), true);
    if (bwapiPINVOKE.SWIGPendingException.Pending) throw bwapiPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static UnitCommand research(Unit unit, TechType tech) {
    UnitCommand ret = new UnitCommand(bwapiPINVOKE.UnitCommand_research(Unit.getCPtr(unit), TechType.getCPtr(tech)), true);
    if (bwapiPINVOKE.SWIGPendingException.Pending) throw bwapiPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static UnitCommand upgrade(Unit unit, UpgradeType upgrade) {
    UnitCommand ret = new UnitCommand(bwapiPINVOKE.UnitCommand_upgrade(Unit.getCPtr(unit), UpgradeType.getCPtr(upgrade)), true);
    if (bwapiPINVOKE.SWIGPendingException.Pending) throw bwapiPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static UnitCommand setRallyPoint(Unit unit, Position target) {
    UnitCommand ret = new UnitCommand(bwapiPINVOKE.UnitCommand_setRallyPoint__SWIG_0(Unit.getCPtr(unit), Position.getCPtr(target)), true);
    if (bwapiPINVOKE.SWIGPendingException.Pending) throw bwapiPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static UnitCommand setRallyPoint(Unit unit, Unit target) {
    UnitCommand ret = new UnitCommand(bwapiPINVOKE.UnitCommand_setRallyPoint__SWIG_1(Unit.getCPtr(unit), Unit.getCPtr(target)), true);
    return ret;
  }

  public static UnitCommand move(Unit unit, Position target, bool shiftQueueCommand) {
    UnitCommand ret = new UnitCommand(bwapiPINVOKE.UnitCommand_move__SWIG_0(Unit.getCPtr(unit), Position.getCPtr(target), shiftQueueCommand), true);
    if (bwapiPINVOKE.SWIGPendingException.Pending) throw bwapiPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static UnitCommand move(Unit unit, Position target) {
    UnitCommand ret = new UnitCommand(bwapiPINVOKE.UnitCommand_move__SWIG_1(Unit.getCPtr(unit), Position.getCPtr(target)), true);
    if (bwapiPINVOKE.SWIGPendingException.Pending) throw bwapiPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static UnitCommand patrol(Unit unit, Position target, bool shiftQueueCommand) {
    UnitCommand ret = new UnitCommand(bwapiPINVOKE.UnitCommand_patrol__SWIG_0(Unit.getCPtr(unit), Position.getCPtr(target), shiftQueueCommand), true);
    if (bwapiPINVOKE.SWIGPendingException.Pending) throw bwapiPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static UnitCommand patrol(Unit unit, Position target) {
    UnitCommand ret = new UnitCommand(bwapiPINVOKE.UnitCommand_patrol__SWIG_1(Unit.getCPtr(unit), Position.getCPtr(target)), true);
    if (bwapiPINVOKE.SWIGPendingException.Pending) throw bwapiPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static UnitCommand holdPosition(Unit unit, bool shiftQueueCommand) {
    UnitCommand ret = new UnitCommand(bwapiPINVOKE.UnitCommand_holdPosition__SWIG_0(Unit.getCPtr(unit), shiftQueueCommand), true);
    return ret;
  }

  public static UnitCommand holdPosition(Unit unit) {
    UnitCommand ret = new UnitCommand(bwapiPINVOKE.UnitCommand_holdPosition__SWIG_1(Unit.getCPtr(unit)), true);
    return ret;
  }

  public static UnitCommand stop(Unit unit, bool shiftQueueCommand) {
    UnitCommand ret = new UnitCommand(bwapiPINVOKE.UnitCommand_stop__SWIG_0(Unit.getCPtr(unit), shiftQueueCommand), true);
    return ret;
  }

  public static UnitCommand stop(Unit unit) {
    UnitCommand ret = new UnitCommand(bwapiPINVOKE.UnitCommand_stop__SWIG_1(Unit.getCPtr(unit)), true);
    return ret;
  }

  public static UnitCommand follow(Unit unit, Unit target, bool shiftQueueCommand) {
    UnitCommand ret = new UnitCommand(bwapiPINVOKE.UnitCommand_follow__SWIG_0(Unit.getCPtr(unit), Unit.getCPtr(target), shiftQueueCommand), true);
    return ret;
  }

  public static UnitCommand follow(Unit unit, Unit target) {
    UnitCommand ret = new UnitCommand(bwapiPINVOKE.UnitCommand_follow__SWIG_1(Unit.getCPtr(unit), Unit.getCPtr(target)), true);
    return ret;
  }

  public static UnitCommand gather(Unit unit, Unit target, bool shiftQueueCommand) {
    UnitCommand ret = new UnitCommand(bwapiPINVOKE.UnitCommand_gather__SWIG_0(Unit.getCPtr(unit), Unit.getCPtr(target), shiftQueueCommand), true);
    return ret;
  }

  public static UnitCommand gather(Unit unit, Unit target) {
    UnitCommand ret = new UnitCommand(bwapiPINVOKE.UnitCommand_gather__SWIG_1(Unit.getCPtr(unit), Unit.getCPtr(target)), true);
    return ret;
  }

  public static UnitCommand returnCargo(Unit unit, bool shiftQueueCommand) {
    UnitCommand ret = new UnitCommand(bwapiPINVOKE.UnitCommand_returnCargo__SWIG_0(Unit.getCPtr(unit), shiftQueueCommand), true);
    return ret;
  }

  public static UnitCommand returnCargo(Unit unit) {
    UnitCommand ret = new UnitCommand(bwapiPINVOKE.UnitCommand_returnCargo__SWIG_1(Unit.getCPtr(unit)), true);
    return ret;
  }

  public static UnitCommand repair(Unit unit, Unit target, bool shiftQueueCommand) {
    UnitCommand ret = new UnitCommand(bwapiPINVOKE.UnitCommand_repair__SWIG_0(Unit.getCPtr(unit), Unit.getCPtr(target), shiftQueueCommand), true);
    return ret;
  }

  public static UnitCommand repair(Unit unit, Unit target) {
    UnitCommand ret = new UnitCommand(bwapiPINVOKE.UnitCommand_repair__SWIG_1(Unit.getCPtr(unit), Unit.getCPtr(target)), true);
    return ret;
  }

  public static UnitCommand burrow(Unit unit) {
    UnitCommand ret = new UnitCommand(bwapiPINVOKE.UnitCommand_burrow(Unit.getCPtr(unit)), true);
    return ret;
  }

  public static UnitCommand unburrow(Unit unit) {
    UnitCommand ret = new UnitCommand(bwapiPINVOKE.UnitCommand_unburrow(Unit.getCPtr(unit)), true);
    return ret;
  }

  public static UnitCommand cloak(Unit unit) {
    UnitCommand ret = new UnitCommand(bwapiPINVOKE.UnitCommand_cloak(Unit.getCPtr(unit)), true);
    return ret;
  }

  public static UnitCommand decloak(Unit unit) {
    UnitCommand ret = new UnitCommand(bwapiPINVOKE.UnitCommand_decloak(Unit.getCPtr(unit)), true);
    return ret;
  }

  public static UnitCommand siege(Unit unit) {
    UnitCommand ret = new UnitCommand(bwapiPINVOKE.UnitCommand_siege(Unit.getCPtr(unit)), true);
    return ret;
  }

  public static UnitCommand unsiege(Unit unit) {
    UnitCommand ret = new UnitCommand(bwapiPINVOKE.UnitCommand_unsiege(Unit.getCPtr(unit)), true);
    return ret;
  }

  public static UnitCommand lift(Unit unit) {
    UnitCommand ret = new UnitCommand(bwapiPINVOKE.UnitCommand_lift(Unit.getCPtr(unit)), true);
    return ret;
  }

  public static UnitCommand land(Unit unit, TilePosition target) {
    UnitCommand ret = new UnitCommand(bwapiPINVOKE.UnitCommand_land(Unit.getCPtr(unit), TilePosition.getCPtr(target)), true);
    if (bwapiPINVOKE.SWIGPendingException.Pending) throw bwapiPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static UnitCommand load(Unit unit, Unit target, bool shiftQueueCommand) {
    UnitCommand ret = new UnitCommand(bwapiPINVOKE.UnitCommand_load__SWIG_0(Unit.getCPtr(unit), Unit.getCPtr(target), shiftQueueCommand), true);
    return ret;
  }

  public static UnitCommand load(Unit unit, Unit target) {
    UnitCommand ret = new UnitCommand(bwapiPINVOKE.UnitCommand_load__SWIG_1(Unit.getCPtr(unit), Unit.getCPtr(target)), true);
    return ret;
  }

  public static UnitCommand unload(Unit unit, Unit target) {
    UnitCommand ret = new UnitCommand(bwapiPINVOKE.UnitCommand_unload(Unit.getCPtr(unit), Unit.getCPtr(target)), true);
    return ret;
  }

  public static UnitCommand unloadAll(Unit unit, bool shiftQueueCommand) {
    UnitCommand ret = new UnitCommand(bwapiPINVOKE.UnitCommand_unloadAll__SWIG_0(Unit.getCPtr(unit), shiftQueueCommand), true);
    return ret;
  }

  public static UnitCommand unloadAll(Unit unit) {
    UnitCommand ret = new UnitCommand(bwapiPINVOKE.UnitCommand_unloadAll__SWIG_1(Unit.getCPtr(unit)), true);
    return ret;
  }

  public static UnitCommand unloadAll(Unit unit, Position target, bool shiftQueueCommand) {
    UnitCommand ret = new UnitCommand(bwapiPINVOKE.UnitCommand_unloadAll__SWIG_2(Unit.getCPtr(unit), Position.getCPtr(target), shiftQueueCommand), true);
    if (bwapiPINVOKE.SWIGPendingException.Pending) throw bwapiPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static UnitCommand unloadAll(Unit unit, Position target) {
    UnitCommand ret = new UnitCommand(bwapiPINVOKE.UnitCommand_unloadAll__SWIG_3(Unit.getCPtr(unit), Position.getCPtr(target)), true);
    if (bwapiPINVOKE.SWIGPendingException.Pending) throw bwapiPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static UnitCommand rightClick(Unit unit, Position target, bool shiftQueueCommand) {
    UnitCommand ret = new UnitCommand(bwapiPINVOKE.UnitCommand_rightClick__SWIG_0(Unit.getCPtr(unit), Position.getCPtr(target), shiftQueueCommand), true);
    if (bwapiPINVOKE.SWIGPendingException.Pending) throw bwapiPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static UnitCommand rightClick(Unit unit, Position target) {
    UnitCommand ret = new UnitCommand(bwapiPINVOKE.UnitCommand_rightClick__SWIG_1(Unit.getCPtr(unit), Position.getCPtr(target)), true);
    if (bwapiPINVOKE.SWIGPendingException.Pending) throw bwapiPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static UnitCommand rightClick(Unit unit, Unit target, bool shiftQueueCommand) {
    UnitCommand ret = new UnitCommand(bwapiPINVOKE.UnitCommand_rightClick__SWIG_2(Unit.getCPtr(unit), Unit.getCPtr(target), shiftQueueCommand), true);
    return ret;
  }

  public static UnitCommand rightClick(Unit unit, Unit target) {
    UnitCommand ret = new UnitCommand(bwapiPINVOKE.UnitCommand_rightClick__SWIG_3(Unit.getCPtr(unit), Unit.getCPtr(target)), true);
    return ret;
  }

  public static UnitCommand haltConstruction(Unit unit) {
    UnitCommand ret = new UnitCommand(bwapiPINVOKE.UnitCommand_haltConstruction(Unit.getCPtr(unit)), true);
    return ret;
  }

  public static UnitCommand cancelConstruction(Unit unit) {
    UnitCommand ret = new UnitCommand(bwapiPINVOKE.UnitCommand_cancelConstruction(Unit.getCPtr(unit)), true);
    return ret;
  }

  public static UnitCommand cancelAddon(Unit unit) {
    UnitCommand ret = new UnitCommand(bwapiPINVOKE.UnitCommand_cancelAddon(Unit.getCPtr(unit)), true);
    return ret;
  }

  public static UnitCommand cancelTrain(Unit unit, int slot) {
    UnitCommand ret = new UnitCommand(bwapiPINVOKE.UnitCommand_cancelTrain__SWIG_0(Unit.getCPtr(unit), slot), true);
    return ret;
  }

  public static UnitCommand cancelTrain(Unit unit) {
    UnitCommand ret = new UnitCommand(bwapiPINVOKE.UnitCommand_cancelTrain__SWIG_1(Unit.getCPtr(unit)), true);
    return ret;
  }

  public static UnitCommand cancelMorph(Unit unit) {
    UnitCommand ret = new UnitCommand(bwapiPINVOKE.UnitCommand_cancelMorph(Unit.getCPtr(unit)), true);
    return ret;
  }

  public static UnitCommand cancelResearch(Unit unit) {
    UnitCommand ret = new UnitCommand(bwapiPINVOKE.UnitCommand_cancelResearch(Unit.getCPtr(unit)), true);
    return ret;
  }

  public static UnitCommand cancelUpgrade(Unit unit) {
    UnitCommand ret = new UnitCommand(bwapiPINVOKE.UnitCommand_cancelUpgrade(Unit.getCPtr(unit)), true);
    return ret;
  }

  public static UnitCommand useTech(Unit unit, TechType tech) {
    UnitCommand ret = new UnitCommand(bwapiPINVOKE.UnitCommand_useTech__SWIG_0(Unit.getCPtr(unit), TechType.getCPtr(tech)), true);
    if (bwapiPINVOKE.SWIGPendingException.Pending) throw bwapiPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static UnitCommand useTech(Unit unit, TechType tech, Position target) {
    UnitCommand ret = new UnitCommand(bwapiPINVOKE.UnitCommand_useTech__SWIG_1(Unit.getCPtr(unit), TechType.getCPtr(tech), Position.getCPtr(target)), true);
    if (bwapiPINVOKE.SWIGPendingException.Pending) throw bwapiPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static UnitCommand useTech(Unit unit, TechType tech, Unit target) {
    UnitCommand ret = new UnitCommand(bwapiPINVOKE.UnitCommand_useTech__SWIG_2(Unit.getCPtr(unit), TechType.getCPtr(tech), Unit.getCPtr(target)), true);
    if (bwapiPINVOKE.SWIGPendingException.Pending) throw bwapiPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static UnitCommand placeCOP(Unit unit, TilePosition target) {
    UnitCommand ret = new UnitCommand(bwapiPINVOKE.UnitCommand_placeCOP(Unit.getCPtr(unit), TilePosition.getCPtr(target)), true);
    if (bwapiPINVOKE.SWIGPendingException.Pending) throw bwapiPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public UnitCommandType getType() {
    UnitCommandType ret = new UnitCommandType(bwapiPINVOKE.UnitCommand_getType(swigCPtr), true);
    return ret;
  }

  public Unit getUnit() {
    global::System.IntPtr cPtr = bwapiPINVOKE.UnitCommand_getUnit(swigCPtr);
    Unit ret = (cPtr == global::System.IntPtr.Zero) ? null : new Unit(cPtr, false);
    return ret;
  }

  public Unit getTarget() {
    global::System.IntPtr cPtr = bwapiPINVOKE.UnitCommand_getTarget(swigCPtr);
    Unit ret = (cPtr == global::System.IntPtr.Zero) ? null : new Unit(cPtr, false);
    return ret;
  }

  public Position getTargetPosition() {
    Position ret = new Position(bwapiPINVOKE.UnitCommand_getTargetPosition(swigCPtr), true);
    return ret;
  }

  public TilePosition getTargetTilePosition() {
    TilePosition ret = new TilePosition(bwapiPINVOKE.UnitCommand_getTargetTilePosition(swigCPtr), true);
    return ret;
  }

  public UnitType getUnitType() {
    UnitType ret = new UnitType(bwapiPINVOKE.UnitCommand_getUnitType(swigCPtr), true);
    return ret;
  }

  public TechType getTechType() {
    TechType ret = new TechType(bwapiPINVOKE.UnitCommand_getTechType(swigCPtr), true);
    return ret;
  }

  public UpgradeType getUpgradeType() {
    UpgradeType ret = new UpgradeType(bwapiPINVOKE.UnitCommand_getUpgradeType(swigCPtr), true);
    return ret;
  }

  public int getSlot() {
    int ret = bwapiPINVOKE.UnitCommand_getSlot(swigCPtr);
    return ret;
  }

  public bool isQueued() {
    bool ret = bwapiPINVOKE.UnitCommand_isQueued(swigCPtr);
    return ret;
  }

  public bool opEquals(UnitCommand other) {
    bool ret = bwapiPINVOKE.UnitCommand_opEquals(swigCPtr, UnitCommand.getCPtr(other));
    if (bwapiPINVOKE.SWIGPendingException.Pending) throw bwapiPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool opNotEquals(UnitCommand other) {
    bool ret = bwapiPINVOKE.UnitCommand_opNotEquals(swigCPtr, UnitCommand.getCPtr(other));
    if (bwapiPINVOKE.SWIGPendingException.Pending) throw bwapiPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool opLessThan(UnitCommand other) {
    bool ret = bwapiPINVOKE.UnitCommand_opLessThan(swigCPtr, UnitCommand.getCPtr(other));
    if (bwapiPINVOKE.SWIGPendingException.Pending) throw bwapiPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool opGreaterThan(UnitCommand other) {
    bool ret = bwapiPINVOKE.UnitCommand_opGreaterThan(swigCPtr, UnitCommand.getCPtr(other));
    if (bwapiPINVOKE.SWIGPendingException.Pending) throw bwapiPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public Unit unit {
    set {
      bwapiPINVOKE.UnitCommand_unit_set(swigCPtr, Unit.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitCommand_unit_get(swigCPtr);
      Unit ret = (cPtr == global::System.IntPtr.Zero) ? null : new Unit(cPtr, false);
      return ret;
    } 
  }

  public UnitCommandType type {
    set {
      bwapiPINVOKE.UnitCommand_type_set(swigCPtr, UnitCommandType.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitCommand_type_get(swigCPtr);
      UnitCommandType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitCommandType(cPtr, false);
      return ret;
    } 
  }

  public Unit target {
    set {
      bwapiPINVOKE.UnitCommand_target_set(swigCPtr, Unit.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitCommand_target_get(swigCPtr);
      Unit ret = (cPtr == global::System.IntPtr.Zero) ? null : new Unit(cPtr, false);
      return ret;
    } 
  }

  public int x {
    set {
      bwapiPINVOKE.UnitCommand_x_set(swigCPtr, value);
    } 
    get {
      int ret = bwapiPINVOKE.UnitCommand_x_get(swigCPtr);
      return ret;
    } 
  }

  public int y {
    set {
      bwapiPINVOKE.UnitCommand_y_set(swigCPtr, value);
    } 
    get {
      int ret = bwapiPINVOKE.UnitCommand_y_get(swigCPtr);
      return ret;
    } 
  }

  public int extra {
    set {
      bwapiPINVOKE.UnitCommand_extra_set(swigCPtr, value);
    } 
    get {
      int ret = bwapiPINVOKE.UnitCommand_extra_get(swigCPtr);
      return ret;
    } 
  }

}

}
