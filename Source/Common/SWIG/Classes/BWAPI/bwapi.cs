//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.5
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace SWIG.BWAPI {

public class bwapi {
  public static void BWAPI_init() {
    bwapiPINVOKE.BWAPI_init();
  }

  public static int BWAPI_getRevision() {
    int ret = bwapiPINVOKE.BWAPI_getRevision();
    return ret;
  }

  public static bool BWAPI_isDebug() {
    bool ret = bwapiPINVOKE.BWAPI_isDebug();
    return ret;
  }

  public static GameType getGameType(string name) {
    GameType ret = new GameType(bwapiPINVOKE.getGameType(name), true);
    if (bwapiPINVOKE.SWIGPendingException.Pending) throw bwapiPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static GameTypeSet allGameTypes() {
    GameTypeSet ret = new GameTypeSet(bwapiPINVOKE.allGameTypes(), false);
    return ret;
  }

  public static void GameTypes_init() {
    bwapiPINVOKE.GameTypes_init();
  }

  public static GameType GameTypes_Melee {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.GameTypes_Melee_get();
      GameType ret = (cPtr == global::System.IntPtr.Zero) ? null : new GameType(cPtr, false);
      return ret;
    } 
  }

  public static GameType GameTypes_Free_For_All {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.GameTypes_Free_For_All_get();
      GameType ret = (cPtr == global::System.IntPtr.Zero) ? null : new GameType(cPtr, false);
      return ret;
    } 
  }

  public static GameType GameTypes_One_on_One {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.GameTypes_One_on_One_get();
      GameType ret = (cPtr == global::System.IntPtr.Zero) ? null : new GameType(cPtr, false);
      return ret;
    } 
  }

  public static GameType GameTypes_Capture_The_Flag {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.GameTypes_Capture_The_Flag_get();
      GameType ret = (cPtr == global::System.IntPtr.Zero) ? null : new GameType(cPtr, false);
      return ret;
    } 
  }

  public static GameType GameTypes_Greed {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.GameTypes_Greed_get();
      GameType ret = (cPtr == global::System.IntPtr.Zero) ? null : new GameType(cPtr, false);
      return ret;
    } 
  }

  public static GameType GameTypes_Slaughter {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.GameTypes_Slaughter_get();
      GameType ret = (cPtr == global::System.IntPtr.Zero) ? null : new GameType(cPtr, false);
      return ret;
    } 
  }

  public static GameType GameTypes_Sudden_Death {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.GameTypes_Sudden_Death_get();
      GameType ret = (cPtr == global::System.IntPtr.Zero) ? null : new GameType(cPtr, false);
      return ret;
    } 
  }

  public static GameType GameTypes_Ladder {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.GameTypes_Ladder_get();
      GameType ret = (cPtr == global::System.IntPtr.Zero) ? null : new GameType(cPtr, false);
      return ret;
    } 
  }

  public static GameType GameTypes_Use_Map_Settings {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.GameTypes_Use_Map_Settings_get();
      GameType ret = (cPtr == global::System.IntPtr.Zero) ? null : new GameType(cPtr, false);
      return ret;
    } 
  }

  public static GameType GameTypes_Team_Melee {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.GameTypes_Team_Melee_get();
      GameType ret = (cPtr == global::System.IntPtr.Zero) ? null : new GameType(cPtr, false);
      return ret;
    } 
  }

  public static GameType GameTypes_Team_Free_For_All {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.GameTypes_Team_Free_For_All_get();
      GameType ret = (cPtr == global::System.IntPtr.Zero) ? null : new GameType(cPtr, false);
      return ret;
    } 
  }

  public static GameType GameTypes_Team_Capture_The_Flag {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.GameTypes_Team_Capture_The_Flag_get();
      GameType ret = (cPtr == global::System.IntPtr.Zero) ? null : new GameType(cPtr, false);
      return ret;
    } 
  }

  public static GameType GameTypes_Top_vs_Bottom {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.GameTypes_Top_vs_Bottom_get();
      GameType ret = (cPtr == global::System.IntPtr.Zero) ? null : new GameType(cPtr, false);
      return ret;
    } 
  }

  public static GameType GameTypes_Pro_Gamer_League {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.GameTypes_Pro_Gamer_League_get();
      GameType ret = (cPtr == global::System.IntPtr.Zero) ? null : new GameType(cPtr, false);
      return ret;
    } 
  }

  public static GameType GameTypes_None {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.GameTypes_None_get();
      GameType ret = (cPtr == global::System.IntPtr.Zero) ? null : new GameType(cPtr, false);
      return ret;
    } 
  }

  public static GameType GameTypes_Unknown {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.GameTypes_Unknown_get();
      GameType ret = (cPtr == global::System.IntPtr.Zero) ? null : new GameType(cPtr, false);
      return ret;
    } 
  }

  public static Race getRace(string name) {
    Race ret = new Race(bwapiPINVOKE.getRace(name), true);
    if (bwapiPINVOKE.SWIGPendingException.Pending) throw bwapiPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static RaceSet allRaces() {
    RaceSet ret = new RaceSet(bwapiPINVOKE.allRaces(), false);
    return ret;
  }

  public static void Races_init() {
    bwapiPINVOKE.Races_init();
  }

  public static Race Races_Zerg {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Races_Zerg_get();
      Race ret = (cPtr == global::System.IntPtr.Zero) ? null : new Race(cPtr, false);
      return ret;
    } 
  }

  public static Race Races_Terran {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Races_Terran_get();
      Race ret = (cPtr == global::System.IntPtr.Zero) ? null : new Race(cPtr, false);
      return ret;
    } 
  }

  public static Race Races_Protoss {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Races_Protoss_get();
      Race ret = (cPtr == global::System.IntPtr.Zero) ? null : new Race(cPtr, false);
      return ret;
    } 
  }

  public static Race Races_Random {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Races_Random_get();
      Race ret = (cPtr == global::System.IntPtr.Zero) ? null : new Race(cPtr, false);
      return ret;
    } 
  }

  public static Race Races_Other {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Races_Other_get();
      Race ret = (cPtr == global::System.IntPtr.Zero) ? null : new Race(cPtr, false);
      return ret;
    } 
  }

  public static Race Races_None {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Races_None_get();
      Race ret = (cPtr == global::System.IntPtr.Zero) ? null : new Race(cPtr, false);
      return ret;
    } 
  }

  public static Race Races_Unknown {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Races_Unknown_get();
      Race ret = (cPtr == global::System.IntPtr.Zero) ? null : new Race(cPtr, false);
      return ret;
    } 
  }

  public static TechType getTechType(string name) {
    TechType ret = new TechType(bwapiPINVOKE.getTechType(name), true);
    if (bwapiPINVOKE.SWIGPendingException.Pending) throw bwapiPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static TechTypeSet allTechTypes() {
    TechTypeSet ret = new TechTypeSet(bwapiPINVOKE.allTechTypes(), false);
    return ret;
  }

  public static void TechTypes_init() {
    bwapiPINVOKE.TechTypes_init();
  }

  public static TechType TechTypes_Stim_Packs {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.TechTypes_Stim_Packs_get();
      TechType ret = (cPtr == global::System.IntPtr.Zero) ? null : new TechType(cPtr, false);
      return ret;
    } 
  }

  public static TechType TechTypes_Lockdown {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.TechTypes_Lockdown_get();
      TechType ret = (cPtr == global::System.IntPtr.Zero) ? null : new TechType(cPtr, false);
      return ret;
    } 
  }

  public static TechType TechTypes_EMP_Shockwave {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.TechTypes_EMP_Shockwave_get();
      TechType ret = (cPtr == global::System.IntPtr.Zero) ? null : new TechType(cPtr, false);
      return ret;
    } 
  }

  public static TechType TechTypes_Spider_Mines {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.TechTypes_Spider_Mines_get();
      TechType ret = (cPtr == global::System.IntPtr.Zero) ? null : new TechType(cPtr, false);
      return ret;
    } 
  }

  public static TechType TechTypes_Scanner_Sweep {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.TechTypes_Scanner_Sweep_get();
      TechType ret = (cPtr == global::System.IntPtr.Zero) ? null : new TechType(cPtr, false);
      return ret;
    } 
  }

  public static TechType TechTypes_Tank_Siege_Mode {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.TechTypes_Tank_Siege_Mode_get();
      TechType ret = (cPtr == global::System.IntPtr.Zero) ? null : new TechType(cPtr, false);
      return ret;
    } 
  }

  public static TechType TechTypes_Defensive_Matrix {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.TechTypes_Defensive_Matrix_get();
      TechType ret = (cPtr == global::System.IntPtr.Zero) ? null : new TechType(cPtr, false);
      return ret;
    } 
  }

  public static TechType TechTypes_Irradiate {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.TechTypes_Irradiate_get();
      TechType ret = (cPtr == global::System.IntPtr.Zero) ? null : new TechType(cPtr, false);
      return ret;
    } 
  }

  public static TechType TechTypes_Yamato_Gun {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.TechTypes_Yamato_Gun_get();
      TechType ret = (cPtr == global::System.IntPtr.Zero) ? null : new TechType(cPtr, false);
      return ret;
    } 
  }

  public static TechType TechTypes_Cloaking_Field {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.TechTypes_Cloaking_Field_get();
      TechType ret = (cPtr == global::System.IntPtr.Zero) ? null : new TechType(cPtr, false);
      return ret;
    } 
  }

  public static TechType TechTypes_Personnel_Cloaking {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.TechTypes_Personnel_Cloaking_get();
      TechType ret = (cPtr == global::System.IntPtr.Zero) ? null : new TechType(cPtr, false);
      return ret;
    } 
  }

  public static TechType TechTypes_Burrowing {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.TechTypes_Burrowing_get();
      TechType ret = (cPtr == global::System.IntPtr.Zero) ? null : new TechType(cPtr, false);
      return ret;
    } 
  }

  public static TechType TechTypes_Infestation {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.TechTypes_Infestation_get();
      TechType ret = (cPtr == global::System.IntPtr.Zero) ? null : new TechType(cPtr, false);
      return ret;
    } 
  }

  public static TechType TechTypes_Spawn_Broodlings {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.TechTypes_Spawn_Broodlings_get();
      TechType ret = (cPtr == global::System.IntPtr.Zero) ? null : new TechType(cPtr, false);
      return ret;
    } 
  }

  public static TechType TechTypes_Dark_Swarm {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.TechTypes_Dark_Swarm_get();
      TechType ret = (cPtr == global::System.IntPtr.Zero) ? null : new TechType(cPtr, false);
      return ret;
    } 
  }

  public static TechType TechTypes_Plague {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.TechTypes_Plague_get();
      TechType ret = (cPtr == global::System.IntPtr.Zero) ? null : new TechType(cPtr, false);
      return ret;
    } 
  }

  public static TechType TechTypes_Consume {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.TechTypes_Consume_get();
      TechType ret = (cPtr == global::System.IntPtr.Zero) ? null : new TechType(cPtr, false);
      return ret;
    } 
  }

  public static TechType TechTypes_Ensnare {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.TechTypes_Ensnare_get();
      TechType ret = (cPtr == global::System.IntPtr.Zero) ? null : new TechType(cPtr, false);
      return ret;
    } 
  }

  public static TechType TechTypes_Parasite {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.TechTypes_Parasite_get();
      TechType ret = (cPtr == global::System.IntPtr.Zero) ? null : new TechType(cPtr, false);
      return ret;
    } 
  }

  public static TechType TechTypes_Psionic_Storm {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.TechTypes_Psionic_Storm_get();
      TechType ret = (cPtr == global::System.IntPtr.Zero) ? null : new TechType(cPtr, false);
      return ret;
    } 
  }

  public static TechType TechTypes_Hallucination {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.TechTypes_Hallucination_get();
      TechType ret = (cPtr == global::System.IntPtr.Zero) ? null : new TechType(cPtr, false);
      return ret;
    } 
  }

  public static TechType TechTypes_Recall {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.TechTypes_Recall_get();
      TechType ret = (cPtr == global::System.IntPtr.Zero) ? null : new TechType(cPtr, false);
      return ret;
    } 
  }

  public static TechType TechTypes_Stasis_Field {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.TechTypes_Stasis_Field_get();
      TechType ret = (cPtr == global::System.IntPtr.Zero) ? null : new TechType(cPtr, false);
      return ret;
    } 
  }

  public static TechType TechTypes_Archon_Warp {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.TechTypes_Archon_Warp_get();
      TechType ret = (cPtr == global::System.IntPtr.Zero) ? null : new TechType(cPtr, false);
      return ret;
    } 
  }

  public static TechType TechTypes_Restoration {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.TechTypes_Restoration_get();
      TechType ret = (cPtr == global::System.IntPtr.Zero) ? null : new TechType(cPtr, false);
      return ret;
    } 
  }

  public static TechType TechTypes_Disruption_Web {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.TechTypes_Disruption_Web_get();
      TechType ret = (cPtr == global::System.IntPtr.Zero) ? null : new TechType(cPtr, false);
      return ret;
    } 
  }

  public static TechType TechTypes_Mind_Control {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.TechTypes_Mind_Control_get();
      TechType ret = (cPtr == global::System.IntPtr.Zero) ? null : new TechType(cPtr, false);
      return ret;
    } 
  }

  public static TechType TechTypes_Dark_Archon_Meld {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.TechTypes_Dark_Archon_Meld_get();
      TechType ret = (cPtr == global::System.IntPtr.Zero) ? null : new TechType(cPtr, false);
      return ret;
    } 
  }

  public static TechType TechTypes_Feedback {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.TechTypes_Feedback_get();
      TechType ret = (cPtr == global::System.IntPtr.Zero) ? null : new TechType(cPtr, false);
      return ret;
    } 
  }

  public static TechType TechTypes_Optical_Flare {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.TechTypes_Optical_Flare_get();
      TechType ret = (cPtr == global::System.IntPtr.Zero) ? null : new TechType(cPtr, false);
      return ret;
    } 
  }

  public static TechType TechTypes_Maelstrom {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.TechTypes_Maelstrom_get();
      TechType ret = (cPtr == global::System.IntPtr.Zero) ? null : new TechType(cPtr, false);
      return ret;
    } 
  }

  public static TechType TechTypes_Lurker_Aspect {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.TechTypes_Lurker_Aspect_get();
      TechType ret = (cPtr == global::System.IntPtr.Zero) ? null : new TechType(cPtr, false);
      return ret;
    } 
  }

  public static TechType TechTypes_Healing {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.TechTypes_Healing_get();
      TechType ret = (cPtr == global::System.IntPtr.Zero) ? null : new TechType(cPtr, false);
      return ret;
    } 
  }

  public static TechType TechTypes_None {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.TechTypes_None_get();
      TechType ret = (cPtr == global::System.IntPtr.Zero) ? null : new TechType(cPtr, false);
      return ret;
    } 
  }

  public static TechType TechTypes_Unknown {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.TechTypes_Unknown_get();
      TechType ret = (cPtr == global::System.IntPtr.Zero) ? null : new TechType(cPtr, false);
      return ret;
    } 
  }

  public static TechType TechTypes_Nuclear_Strike {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.TechTypes_Nuclear_Strike_get();
      TechType ret = (cPtr == global::System.IntPtr.Zero) ? null : new TechType(cPtr, false);
      return ret;
    } 
  }

  public static UpgradeType getUpgradeType(string name) {
    UpgradeType ret = new UpgradeType(bwapiPINVOKE.getUpgradeType(name), true);
    if (bwapiPINVOKE.SWIGPendingException.Pending) throw bwapiPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static UpgradeTypeSet allUpgradeTypes() {
    UpgradeTypeSet ret = new UpgradeTypeSet(bwapiPINVOKE.allUpgradeTypes(), false);
    return ret;
  }

  public static void UpgradeTypes_init() {
    bwapiPINVOKE.UpgradeTypes_init();
  }

  public static UpgradeType UpgradeTypes_Terran_Infantry_Armor {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UpgradeTypes_Terran_Infantry_Armor_get();
      UpgradeType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UpgradeType(cPtr, false);
      return ret;
    } 
  }

  public static UpgradeType UpgradeTypes_Terran_Vehicle_Plating {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UpgradeTypes_Terran_Vehicle_Plating_get();
      UpgradeType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UpgradeType(cPtr, false);
      return ret;
    } 
  }

  public static UpgradeType UpgradeTypes_Terran_Ship_Plating {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UpgradeTypes_Terran_Ship_Plating_get();
      UpgradeType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UpgradeType(cPtr, false);
      return ret;
    } 
  }

  public static UpgradeType UpgradeTypes_Zerg_Carapace {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UpgradeTypes_Zerg_Carapace_get();
      UpgradeType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UpgradeType(cPtr, false);
      return ret;
    } 
  }

  public static UpgradeType UpgradeTypes_Zerg_Flyer_Carapace {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UpgradeTypes_Zerg_Flyer_Carapace_get();
      UpgradeType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UpgradeType(cPtr, false);
      return ret;
    } 
  }

  public static UpgradeType UpgradeTypes_Protoss_Ground_Armor {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UpgradeTypes_Protoss_Ground_Armor_get();
      UpgradeType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UpgradeType(cPtr, false);
      return ret;
    } 
  }

  public static UpgradeType UpgradeTypes_Protoss_Air_Armor {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UpgradeTypes_Protoss_Air_Armor_get();
      UpgradeType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UpgradeType(cPtr, false);
      return ret;
    } 
  }

  public static UpgradeType UpgradeTypes_Terran_Infantry_Weapons {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UpgradeTypes_Terran_Infantry_Weapons_get();
      UpgradeType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UpgradeType(cPtr, false);
      return ret;
    } 
  }

  public static UpgradeType UpgradeTypes_Terran_Vehicle_Weapons {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UpgradeTypes_Terran_Vehicle_Weapons_get();
      UpgradeType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UpgradeType(cPtr, false);
      return ret;
    } 
  }

  public static UpgradeType UpgradeTypes_Terran_Ship_Weapons {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UpgradeTypes_Terran_Ship_Weapons_get();
      UpgradeType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UpgradeType(cPtr, false);
      return ret;
    } 
  }

  public static UpgradeType UpgradeTypes_Zerg_Melee_Attacks {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UpgradeTypes_Zerg_Melee_Attacks_get();
      UpgradeType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UpgradeType(cPtr, false);
      return ret;
    } 
  }

  public static UpgradeType UpgradeTypes_Zerg_Missile_Attacks {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UpgradeTypes_Zerg_Missile_Attacks_get();
      UpgradeType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UpgradeType(cPtr, false);
      return ret;
    } 
  }

  public static UpgradeType UpgradeTypes_Zerg_Flyer_Attacks {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UpgradeTypes_Zerg_Flyer_Attacks_get();
      UpgradeType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UpgradeType(cPtr, false);
      return ret;
    } 
  }

  public static UpgradeType UpgradeTypes_Protoss_Ground_Weapons {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UpgradeTypes_Protoss_Ground_Weapons_get();
      UpgradeType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UpgradeType(cPtr, false);
      return ret;
    } 
  }

  public static UpgradeType UpgradeTypes_Protoss_Air_Weapons {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UpgradeTypes_Protoss_Air_Weapons_get();
      UpgradeType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UpgradeType(cPtr, false);
      return ret;
    } 
  }

  public static UpgradeType UpgradeTypes_Protoss_Plasma_Shields {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UpgradeTypes_Protoss_Plasma_Shields_get();
      UpgradeType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UpgradeType(cPtr, false);
      return ret;
    } 
  }

  public static UpgradeType UpgradeTypes_U_238_Shells {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UpgradeTypes_U_238_Shells_get();
      UpgradeType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UpgradeType(cPtr, false);
      return ret;
    } 
  }

  public static UpgradeType UpgradeTypes_Ion_Thrusters {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UpgradeTypes_Ion_Thrusters_get();
      UpgradeType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UpgradeType(cPtr, false);
      return ret;
    } 
  }

  public static UpgradeType UpgradeTypes_Titan_Reactor {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UpgradeTypes_Titan_Reactor_get();
      UpgradeType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UpgradeType(cPtr, false);
      return ret;
    } 
  }

  public static UpgradeType UpgradeTypes_Ocular_Implants {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UpgradeTypes_Ocular_Implants_get();
      UpgradeType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UpgradeType(cPtr, false);
      return ret;
    } 
  }

  public static UpgradeType UpgradeTypes_Moebius_Reactor {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UpgradeTypes_Moebius_Reactor_get();
      UpgradeType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UpgradeType(cPtr, false);
      return ret;
    } 
  }

  public static UpgradeType UpgradeTypes_Apollo_Reactor {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UpgradeTypes_Apollo_Reactor_get();
      UpgradeType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UpgradeType(cPtr, false);
      return ret;
    } 
  }

  public static UpgradeType UpgradeTypes_Colossus_Reactor {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UpgradeTypes_Colossus_Reactor_get();
      UpgradeType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UpgradeType(cPtr, false);
      return ret;
    } 
  }

  public static UpgradeType UpgradeTypes_Ventral_Sacs {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UpgradeTypes_Ventral_Sacs_get();
      UpgradeType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UpgradeType(cPtr, false);
      return ret;
    } 
  }

  public static UpgradeType UpgradeTypes_Antennae {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UpgradeTypes_Antennae_get();
      UpgradeType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UpgradeType(cPtr, false);
      return ret;
    } 
  }

  public static UpgradeType UpgradeTypes_Pneumatized_Carapace {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UpgradeTypes_Pneumatized_Carapace_get();
      UpgradeType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UpgradeType(cPtr, false);
      return ret;
    } 
  }

  public static UpgradeType UpgradeTypes_Metabolic_Boost {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UpgradeTypes_Metabolic_Boost_get();
      UpgradeType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UpgradeType(cPtr, false);
      return ret;
    } 
  }

  public static UpgradeType UpgradeTypes_Adrenal_Glands {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UpgradeTypes_Adrenal_Glands_get();
      UpgradeType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UpgradeType(cPtr, false);
      return ret;
    } 
  }

  public static UpgradeType UpgradeTypes_Muscular_Augments {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UpgradeTypes_Muscular_Augments_get();
      UpgradeType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UpgradeType(cPtr, false);
      return ret;
    } 
  }

  public static UpgradeType UpgradeTypes_Grooved_Spines {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UpgradeTypes_Grooved_Spines_get();
      UpgradeType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UpgradeType(cPtr, false);
      return ret;
    } 
  }

  public static UpgradeType UpgradeTypes_Gamete_Meiosis {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UpgradeTypes_Gamete_Meiosis_get();
      UpgradeType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UpgradeType(cPtr, false);
      return ret;
    } 
  }

  public static UpgradeType UpgradeTypes_Metasynaptic_Node {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UpgradeTypes_Metasynaptic_Node_get();
      UpgradeType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UpgradeType(cPtr, false);
      return ret;
    } 
  }

  public static UpgradeType UpgradeTypes_Singularity_Charge {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UpgradeTypes_Singularity_Charge_get();
      UpgradeType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UpgradeType(cPtr, false);
      return ret;
    } 
  }

  public static UpgradeType UpgradeTypes_Leg_Enhancements {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UpgradeTypes_Leg_Enhancements_get();
      UpgradeType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UpgradeType(cPtr, false);
      return ret;
    } 
  }

  public static UpgradeType UpgradeTypes_Scarab_Damage {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UpgradeTypes_Scarab_Damage_get();
      UpgradeType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UpgradeType(cPtr, false);
      return ret;
    } 
  }

  public static UpgradeType UpgradeTypes_Reaver_Capacity {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UpgradeTypes_Reaver_Capacity_get();
      UpgradeType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UpgradeType(cPtr, false);
      return ret;
    } 
  }

  public static UpgradeType UpgradeTypes_Gravitic_Drive {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UpgradeTypes_Gravitic_Drive_get();
      UpgradeType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UpgradeType(cPtr, false);
      return ret;
    } 
  }

  public static UpgradeType UpgradeTypes_Sensor_Array {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UpgradeTypes_Sensor_Array_get();
      UpgradeType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UpgradeType(cPtr, false);
      return ret;
    } 
  }

  public static UpgradeType UpgradeTypes_Gravitic_Boosters {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UpgradeTypes_Gravitic_Boosters_get();
      UpgradeType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UpgradeType(cPtr, false);
      return ret;
    } 
  }

  public static UpgradeType UpgradeTypes_Khaydarin_Amulet {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UpgradeTypes_Khaydarin_Amulet_get();
      UpgradeType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UpgradeType(cPtr, false);
      return ret;
    } 
  }

  public static UpgradeType UpgradeTypes_Apial_Sensors {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UpgradeTypes_Apial_Sensors_get();
      UpgradeType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UpgradeType(cPtr, false);
      return ret;
    } 
  }

  public static UpgradeType UpgradeTypes_Gravitic_Thrusters {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UpgradeTypes_Gravitic_Thrusters_get();
      UpgradeType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UpgradeType(cPtr, false);
      return ret;
    } 
  }

  public static UpgradeType UpgradeTypes_Carrier_Capacity {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UpgradeTypes_Carrier_Capacity_get();
      UpgradeType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UpgradeType(cPtr, false);
      return ret;
    } 
  }

  public static UpgradeType UpgradeTypes_Khaydarin_Core {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UpgradeTypes_Khaydarin_Core_get();
      UpgradeType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UpgradeType(cPtr, false);
      return ret;
    } 
  }

  public static UpgradeType UpgradeTypes_Argus_Jewel {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UpgradeTypes_Argus_Jewel_get();
      UpgradeType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UpgradeType(cPtr, false);
      return ret;
    } 
  }

  public static UpgradeType UpgradeTypes_Argus_Talisman {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UpgradeTypes_Argus_Talisman_get();
      UpgradeType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UpgradeType(cPtr, false);
      return ret;
    } 
  }

  public static UpgradeType UpgradeTypes_Caduceus_Reactor {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UpgradeTypes_Caduceus_Reactor_get();
      UpgradeType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UpgradeType(cPtr, false);
      return ret;
    } 
  }

  public static UpgradeType UpgradeTypes_Chitinous_Plating {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UpgradeTypes_Chitinous_Plating_get();
      UpgradeType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UpgradeType(cPtr, false);
      return ret;
    } 
  }

  public static UpgradeType UpgradeTypes_Anabolic_Synthesis {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UpgradeTypes_Anabolic_Synthesis_get();
      UpgradeType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UpgradeType(cPtr, false);
      return ret;
    } 
  }

  public static UpgradeType UpgradeTypes_Charon_Boosters {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UpgradeTypes_Charon_Boosters_get();
      UpgradeType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UpgradeType(cPtr, false);
      return ret;
    } 
  }

  public static UpgradeType UpgradeTypes_None {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UpgradeTypes_None_get();
      UpgradeType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UpgradeType(cPtr, false);
      return ret;
    } 
  }

  public static UpgradeType UpgradeTypes_Unknown {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UpgradeTypes_Unknown_get();
      UpgradeType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UpgradeType(cPtr, false);
      return ret;
    } 
  }

  public static Position Positions_Invalid {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Positions_Invalid_get();
      Position ret = (cPtr == global::System.IntPtr.Zero) ? null : new Position(cPtr, false);
      return ret;
    } 
  }

  public static Position Positions_None {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Positions_None_get();
      Position ret = (cPtr == global::System.IntPtr.Zero) ? null : new Position(cPtr, false);
      return ret;
    } 
  }

  public static Position Positions_Unknown {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Positions_Unknown_get();
      Position ret = (cPtr == global::System.IntPtr.Zero) ? null : new Position(cPtr, false);
      return ret;
    } 
  }

  public static void Colors_init() {
    bwapiPINVOKE.Colors_init();
  }

  public static Color Colors_Red {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Colors_Red_get();
      Color ret = (cPtr == global::System.IntPtr.Zero) ? null : new Color(cPtr, false);
      return ret;
    } 
  }

  public static Color Colors_Blue {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Colors_Blue_get();
      Color ret = (cPtr == global::System.IntPtr.Zero) ? null : new Color(cPtr, false);
      return ret;
    } 
  }

  public static Color Colors_Teal {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Colors_Teal_get();
      Color ret = (cPtr == global::System.IntPtr.Zero) ? null : new Color(cPtr, false);
      return ret;
    } 
  }

  public static Color Colors_Purple {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Colors_Purple_get();
      Color ret = (cPtr == global::System.IntPtr.Zero) ? null : new Color(cPtr, false);
      return ret;
    } 
  }

  public static Color Colors_Orange {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Colors_Orange_get();
      Color ret = (cPtr == global::System.IntPtr.Zero) ? null : new Color(cPtr, false);
      return ret;
    } 
  }

  public static Color Colors_Brown {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Colors_Brown_get();
      Color ret = (cPtr == global::System.IntPtr.Zero) ? null : new Color(cPtr, false);
      return ret;
    } 
  }

  public static Color Colors_White {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Colors_White_get();
      Color ret = (cPtr == global::System.IntPtr.Zero) ? null : new Color(cPtr, false);
      return ret;
    } 
  }

  public static Color Colors_Yellow {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Colors_Yellow_get();
      Color ret = (cPtr == global::System.IntPtr.Zero) ? null : new Color(cPtr, false);
      return ret;
    } 
  }

  public static Color Colors_Green {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Colors_Green_get();
      Color ret = (cPtr == global::System.IntPtr.Zero) ? null : new Color(cPtr, false);
      return ret;
    } 
  }

  public static Color Colors_Cyan {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Colors_Cyan_get();
      Color ret = (cPtr == global::System.IntPtr.Zero) ? null : new Color(cPtr, false);
      return ret;
    } 
  }

  public static Color Colors_Black {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Colors_Black_get();
      Color ret = (cPtr == global::System.IntPtr.Zero) ? null : new Color(cPtr, false);
      return ret;
    } 
  }

  public static Color Colors_Grey {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Colors_Grey_get();
      Color ret = (cPtr == global::System.IntPtr.Zero) ? null : new Color(cPtr, false);
      return ret;
    } 
  }

  public static DamageType getDamageType(string name) {
    DamageType ret = new DamageType(bwapiPINVOKE.getDamageType(name), true);
    if (bwapiPINVOKE.SWIGPendingException.Pending) throw bwapiPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static DamageTypeSet allDamageTypes() {
    DamageTypeSet ret = new DamageTypeSet(bwapiPINVOKE.allDamageTypes(), false);
    return ret;
  }

  public static void DamageTypes_init() {
    bwapiPINVOKE.DamageTypes_init();
  }

  public static DamageType DamageTypes_Independent {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.DamageTypes_Independent_get();
      DamageType ret = (cPtr == global::System.IntPtr.Zero) ? null : new DamageType(cPtr, false);
      return ret;
    } 
  }

  public static DamageType DamageTypes_Explosive {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.DamageTypes_Explosive_get();
      DamageType ret = (cPtr == global::System.IntPtr.Zero) ? null : new DamageType(cPtr, false);
      return ret;
    } 
  }

  public static DamageType DamageTypes_Concussive {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.DamageTypes_Concussive_get();
      DamageType ret = (cPtr == global::System.IntPtr.Zero) ? null : new DamageType(cPtr, false);
      return ret;
    } 
  }

  public static DamageType DamageTypes_Normal {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.DamageTypes_Normal_get();
      DamageType ret = (cPtr == global::System.IntPtr.Zero) ? null : new DamageType(cPtr, false);
      return ret;
    } 
  }

  public static DamageType DamageTypes_Ignore_Armor {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.DamageTypes_Ignore_Armor_get();
      DamageType ret = (cPtr == global::System.IntPtr.Zero) ? null : new DamageType(cPtr, false);
      return ret;
    } 
  }

  public static DamageType DamageTypes_None {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.DamageTypes_None_get();
      DamageType ret = (cPtr == global::System.IntPtr.Zero) ? null : new DamageType(cPtr, false);
      return ret;
    } 
  }

  public static DamageType DamageTypes_Unknown {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.DamageTypes_Unknown_get();
      DamageType ret = (cPtr == global::System.IntPtr.Zero) ? null : new DamageType(cPtr, false);
      return ret;
    } 
  }

  public static Error getError(string name) {
    Error ret = new Error(bwapiPINVOKE.getError(name), true);
    if (bwapiPINVOKE.SWIGPendingException.Pending) throw bwapiPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static ErrorSet allErrors() {
    ErrorSet ret = new ErrorSet(bwapiPINVOKE.allErrors(), false);
    return ret;
  }

  public static void Errors_init() {
    bwapiPINVOKE.Errors_init();
  }

  public static Error Errors_Unit_Does_Not_Exist {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Errors_Unit_Does_Not_Exist_get();
      Error ret = (cPtr == global::System.IntPtr.Zero) ? null : new Error(cPtr, false);
      return ret;
    } 
  }

  public static Error Errors_Unit_Not_Visible {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Errors_Unit_Not_Visible_get();
      Error ret = (cPtr == global::System.IntPtr.Zero) ? null : new Error(cPtr, false);
      return ret;
    } 
  }

  public static Error Errors_Unit_Not_Owned {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Errors_Unit_Not_Owned_get();
      Error ret = (cPtr == global::System.IntPtr.Zero) ? null : new Error(cPtr, false);
      return ret;
    } 
  }

  public static Error Errors_Unit_Busy {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Errors_Unit_Busy_get();
      Error ret = (cPtr == global::System.IntPtr.Zero) ? null : new Error(cPtr, false);
      return ret;
    } 
  }

  public static Error Errors_Incompatible_UnitType {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Errors_Incompatible_UnitType_get();
      Error ret = (cPtr == global::System.IntPtr.Zero) ? null : new Error(cPtr, false);
      return ret;
    } 
  }

  public static Error Errors_Incompatible_TechType {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Errors_Incompatible_TechType_get();
      Error ret = (cPtr == global::System.IntPtr.Zero) ? null : new Error(cPtr, false);
      return ret;
    } 
  }

  public static Error Incompatible_State {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Incompatible_State_get();
      Error ret = (cPtr == global::System.IntPtr.Zero) ? null : new Error(cPtr, false);
      return ret;
    } 
  }

  public static Error Errors_Already_Researched {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Errors_Already_Researched_get();
      Error ret = (cPtr == global::System.IntPtr.Zero) ? null : new Error(cPtr, false);
      return ret;
    } 
  }

  public static Error Errors_Fully_Upgraded {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Errors_Fully_Upgraded_get();
      Error ret = (cPtr == global::System.IntPtr.Zero) ? null : new Error(cPtr, false);
      return ret;
    } 
  }

  public static Error Errors_Currently_Researching {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Errors_Currently_Researching_get();
      Error ret = (cPtr == global::System.IntPtr.Zero) ? null : new Error(cPtr, false);
      return ret;
    } 
  }

  public static Error Errors_Currently_Upgrading {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Errors_Currently_Upgrading_get();
      Error ret = (cPtr == global::System.IntPtr.Zero) ? null : new Error(cPtr, false);
      return ret;
    } 
  }

  public static Error Errors_Insufficient_Minerals {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Errors_Insufficient_Minerals_get();
      Error ret = (cPtr == global::System.IntPtr.Zero) ? null : new Error(cPtr, false);
      return ret;
    } 
  }

  public static Error Errors_Insufficient_Gas {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Errors_Insufficient_Gas_get();
      Error ret = (cPtr == global::System.IntPtr.Zero) ? null : new Error(cPtr, false);
      return ret;
    } 
  }

  public static Error Errors_Insufficient_Supply {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Errors_Insufficient_Supply_get();
      Error ret = (cPtr == global::System.IntPtr.Zero) ? null : new Error(cPtr, false);
      return ret;
    } 
  }

  public static Error Errors_Insufficient_Energy {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Errors_Insufficient_Energy_get();
      Error ret = (cPtr == global::System.IntPtr.Zero) ? null : new Error(cPtr, false);
      return ret;
    } 
  }

  public static Error Errors_Insufficient_Tech {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Errors_Insufficient_Tech_get();
      Error ret = (cPtr == global::System.IntPtr.Zero) ? null : new Error(cPtr, false);
      return ret;
    } 
  }

  public static Error Errors_Insufficient_Ammo {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Errors_Insufficient_Ammo_get();
      Error ret = (cPtr == global::System.IntPtr.Zero) ? null : new Error(cPtr, false);
      return ret;
    } 
  }

  public static Error Errors_Insufficient_Space {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Errors_Insufficient_Space_get();
      Error ret = (cPtr == global::System.IntPtr.Zero) ? null : new Error(cPtr, false);
      return ret;
    } 
  }

  public static Error Invalid_Tile_Position {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Invalid_Tile_Position_get();
      Error ret = (cPtr == global::System.IntPtr.Zero) ? null : new Error(cPtr, false);
      return ret;
    } 
  }

  public static Error Errors_Unbuildable_Location {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Errors_Unbuildable_Location_get();
      Error ret = (cPtr == global::System.IntPtr.Zero) ? null : new Error(cPtr, false);
      return ret;
    } 
  }

  public static Error Unreachable_Location {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Unreachable_Location_get();
      Error ret = (cPtr == global::System.IntPtr.Zero) ? null : new Error(cPtr, false);
      return ret;
    } 
  }

  public static Error Errors_Out_Of_Range {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Errors_Out_Of_Range_get();
      Error ret = (cPtr == global::System.IntPtr.Zero) ? null : new Error(cPtr, false);
      return ret;
    } 
  }

  public static Error Errors_Unable_To_Hit {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Errors_Unable_To_Hit_get();
      Error ret = (cPtr == global::System.IntPtr.Zero) ? null : new Error(cPtr, false);
      return ret;
    } 
  }

  public static Error Errors_Access_Denied {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Errors_Access_Denied_get();
      Error ret = (cPtr == global::System.IntPtr.Zero) ? null : new Error(cPtr, false);
      return ret;
    } 
  }

  public static Error Errors_File_Not_Found {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Errors_File_Not_Found_get();
      Error ret = (cPtr == global::System.IntPtr.Zero) ? null : new Error(cPtr, false);
      return ret;
    } 
  }

  public static Error Errors_Invalid_Parameter {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Errors_Invalid_Parameter_get();
      Error ret = (cPtr == global::System.IntPtr.Zero) ? null : new Error(cPtr, false);
      return ret;
    } 
  }

  public static Error Errors_None {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Errors_None_get();
      Error ret = (cPtr == global::System.IntPtr.Zero) ? null : new Error(cPtr, false);
      return ret;
    } 
  }

  public static Error Errors_Unknown {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Errors_Unknown_get();
      Error ret = (cPtr == global::System.IntPtr.Zero) ? null : new Error(cPtr, false);
      return ret;
    } 
  }

  public static ExplosionType getExplosionType(string name) {
    ExplosionType ret = new ExplosionType(bwapiPINVOKE.getExplosionType(name), true);
    if (bwapiPINVOKE.SWIGPendingException.Pending) throw bwapiPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static ExplosionTypeSet allExplosionTypes() {
    ExplosionTypeSet ret = new ExplosionTypeSet(bwapiPINVOKE.allExplosionTypes(), false);
    return ret;
  }

  public static void ExplosionTypes_init() {
    bwapiPINVOKE.ExplosionTypes_init();
  }

  public static ExplosionType ExplosionTypes_None {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.ExplosionTypes_None_get();
      ExplosionType ret = (cPtr == global::System.IntPtr.Zero) ? null : new ExplosionType(cPtr, false);
      return ret;
    } 
  }

  public static ExplosionType ExplosionTypes_Normal {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.ExplosionTypes_Normal_get();
      ExplosionType ret = (cPtr == global::System.IntPtr.Zero) ? null : new ExplosionType(cPtr, false);
      return ret;
    } 
  }

  public static ExplosionType ExplosionTypes_Radial_Splash {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.ExplosionTypes_Radial_Splash_get();
      ExplosionType ret = (cPtr == global::System.IntPtr.Zero) ? null : new ExplosionType(cPtr, false);
      return ret;
    } 
  }

  public static ExplosionType ExplosionTypes_Enemy_Splash {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.ExplosionTypes_Enemy_Splash_get();
      ExplosionType ret = (cPtr == global::System.IntPtr.Zero) ? null : new ExplosionType(cPtr, false);
      return ret;
    } 
  }

  public static ExplosionType ExplosionTypes_Lockdown {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.ExplosionTypes_Lockdown_get();
      ExplosionType ret = (cPtr == global::System.IntPtr.Zero) ? null : new ExplosionType(cPtr, false);
      return ret;
    } 
  }

  public static ExplosionType ExplosionTypes_Nuclear_Missile {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.ExplosionTypes_Nuclear_Missile_get();
      ExplosionType ret = (cPtr == global::System.IntPtr.Zero) ? null : new ExplosionType(cPtr, false);
      return ret;
    } 
  }

  public static ExplosionType ExplosionTypes_Parasite {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.ExplosionTypes_Parasite_get();
      ExplosionType ret = (cPtr == global::System.IntPtr.Zero) ? null : new ExplosionType(cPtr, false);
      return ret;
    } 
  }

  public static ExplosionType ExplosionTypes_Broodlings {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.ExplosionTypes_Broodlings_get();
      ExplosionType ret = (cPtr == global::System.IntPtr.Zero) ? null : new ExplosionType(cPtr, false);
      return ret;
    } 
  }

  public static ExplosionType ExplosionTypes_EMP_Shockwave {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.ExplosionTypes_EMP_Shockwave_get();
      ExplosionType ret = (cPtr == global::System.IntPtr.Zero) ? null : new ExplosionType(cPtr, false);
      return ret;
    } 
  }

  public static ExplosionType ExplosionTypes_Irradiate {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.ExplosionTypes_Irradiate_get();
      ExplosionType ret = (cPtr == global::System.IntPtr.Zero) ? null : new ExplosionType(cPtr, false);
      return ret;
    } 
  }

  public static ExplosionType ExplosionTypes_Ensnare {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.ExplosionTypes_Ensnare_get();
      ExplosionType ret = (cPtr == global::System.IntPtr.Zero) ? null : new ExplosionType(cPtr, false);
      return ret;
    } 
  }

  public static ExplosionType ExplosionTypes_Plague {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.ExplosionTypes_Plague_get();
      ExplosionType ret = (cPtr == global::System.IntPtr.Zero) ? null : new ExplosionType(cPtr, false);
      return ret;
    } 
  }

  public static ExplosionType ExplosionTypes_Stasis_Field {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.ExplosionTypes_Stasis_Field_get();
      ExplosionType ret = (cPtr == global::System.IntPtr.Zero) ? null : new ExplosionType(cPtr, false);
      return ret;
    } 
  }

  public static ExplosionType ExplosionTypes_Dark_Swarm {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.ExplosionTypes_Dark_Swarm_get();
      ExplosionType ret = (cPtr == global::System.IntPtr.Zero) ? null : new ExplosionType(cPtr, false);
      return ret;
    } 
  }

  public static ExplosionType ExplosionTypes_Consume {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.ExplosionTypes_Consume_get();
      ExplosionType ret = (cPtr == global::System.IntPtr.Zero) ? null : new ExplosionType(cPtr, false);
      return ret;
    } 
  }

  public static ExplosionType ExplosionTypes_Yamato_Gun {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.ExplosionTypes_Yamato_Gun_get();
      ExplosionType ret = (cPtr == global::System.IntPtr.Zero) ? null : new ExplosionType(cPtr, false);
      return ret;
    } 
  }

  public static ExplosionType ExplosionTypes_Restoration {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.ExplosionTypes_Restoration_get();
      ExplosionType ret = (cPtr == global::System.IntPtr.Zero) ? null : new ExplosionType(cPtr, false);
      return ret;
    } 
  }

  public static ExplosionType ExplosionTypes_Disruption_Web {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.ExplosionTypes_Disruption_Web_get();
      ExplosionType ret = (cPtr == global::System.IntPtr.Zero) ? null : new ExplosionType(cPtr, false);
      return ret;
    } 
  }

  public static ExplosionType ExplosionTypes_Corrosive_Acid {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.ExplosionTypes_Corrosive_Acid_get();
      ExplosionType ret = (cPtr == global::System.IntPtr.Zero) ? null : new ExplosionType(cPtr, false);
      return ret;
    } 
  }

  public static ExplosionType ExplosionTypes_Mind_Control {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.ExplosionTypes_Mind_Control_get();
      ExplosionType ret = (cPtr == global::System.IntPtr.Zero) ? null : new ExplosionType(cPtr, false);
      return ret;
    } 
  }

  public static ExplosionType ExplosionTypes_Feedback {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.ExplosionTypes_Feedback_get();
      ExplosionType ret = (cPtr == global::System.IntPtr.Zero) ? null : new ExplosionType(cPtr, false);
      return ret;
    } 
  }

  public static ExplosionType ExplosionTypes_Optical_Flare {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.ExplosionTypes_Optical_Flare_get();
      ExplosionType ret = (cPtr == global::System.IntPtr.Zero) ? null : new ExplosionType(cPtr, false);
      return ret;
    } 
  }

  public static ExplosionType ExplosionTypes_Maelstrom {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.ExplosionTypes_Maelstrom_get();
      ExplosionType ret = (cPtr == global::System.IntPtr.Zero) ? null : new ExplosionType(cPtr, false);
      return ret;
    } 
  }

  public static ExplosionType ExplosionTypes_Air_Splash {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.ExplosionTypes_Air_Splash_get();
      ExplosionType ret = (cPtr == global::System.IntPtr.Zero) ? null : new ExplosionType(cPtr, false);
      return ret;
    } 
  }

  public static ExplosionType ExplosionTypes_Unknown {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.ExplosionTypes_Unknown_get();
      ExplosionType ret = (cPtr == global::System.IntPtr.Zero) ? null : new ExplosionType(cPtr, false);
      return ret;
    } 
  }

  public static Order getOrder(string name) {
    Order ret = new Order(bwapiPINVOKE.getOrder(name), true);
    if (bwapiPINVOKE.SWIGPendingException.Pending) throw bwapiPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static OrderSet allOrders() {
    OrderSet ret = new OrderSet(bwapiPINVOKE.allOrders(), false);
    return ret;
  }

  public static void Orders_init() {
    bwapiPINVOKE.Orders_init();
  }

  public static Order Orders_Die {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_Die_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_Stop {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_Stop_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_Guard {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_Guard_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_PlayerGuard {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_PlayerGuard_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_TurretGuard {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_TurretGuard_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_BunkerGuard {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_BunkerGuard_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_Move {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_Move_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_AttackUnit {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_AttackUnit_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_AttackTile {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_AttackTile_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_Hover {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_Hover_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_AttackMove {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_AttackMove_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_InfestedCommandCenter {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_InfestedCommandCenter_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_UnusedNothing {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_UnusedNothing_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_UnusedPowerup {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_UnusedPowerup_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_TowerGuard {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_TowerGuard_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_VultureMine {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_VultureMine_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_Nothing {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_Nothing_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_Nothing3 {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_Nothing3_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_CastInfestation {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_CastInfestation_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_InfestingCommandCenter {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_InfestingCommandCenter_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_PlaceBuilding {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_PlaceBuilding_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_BuildProtoss2 {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_BuildProtoss2_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_ConstructingBuilding {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_ConstructingBuilding_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_Repair {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_Repair_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_PlaceAddon {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_PlaceAddon_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_BuildAddon {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_BuildAddon_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_Train {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_Train_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_RallyPointUnit {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_RallyPointUnit_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_RallyPointTile {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_RallyPointTile_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_ZergBirth {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_ZergBirth_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_ZergUnitMorph {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_ZergUnitMorph_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_ZergBuildingMorph {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_ZergBuildingMorph_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_IncompleteBuilding {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_IncompleteBuilding_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_BuildNydusExit {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_BuildNydusExit_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_EnterNydusCanal {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_EnterNydusCanal_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_Follow {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_Follow_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_Carrier {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_Carrier_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_ReaverCarrierMove {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_ReaverCarrierMove_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_CarrierIgnore2 {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_CarrierIgnore2_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_Reaver {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_Reaver_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_TrainFighter {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_TrainFighter_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_InterceptorAttack {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_InterceptorAttack_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_ScarabAttack {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_ScarabAttack_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_RechargeShieldsUnit {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_RechargeShieldsUnit_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_RechargeShieldsBattery {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_RechargeShieldsBattery_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_ShieldBattery {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_ShieldBattery_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_InterceptorReturn {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_InterceptorReturn_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_BuildingLand {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_BuildingLand_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_BuildingLiftOff {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_BuildingLiftOff_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_DroneLiftOff {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_DroneLiftOff_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_LiftingOff {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_LiftingOff_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_ResearchTech {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_ResearchTech_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_Upgrade {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_Upgrade_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_Larva {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_Larva_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_SpawningLarva {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_SpawningLarva_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_Harvest1 {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_Harvest1_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_Harvest2 {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_Harvest2_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_MoveToGas {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_MoveToGas_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_WaitForGas {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_WaitForGas_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_HarvestGas {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_HarvestGas_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_ReturnGas {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_ReturnGas_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_MoveToMinerals {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_MoveToMinerals_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_WaitForMinerals {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_WaitForMinerals_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_MiningMinerals {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_MiningMinerals_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_Harvest3 {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_Harvest3_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_Harvest4 {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_Harvest4_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_ReturnMinerals {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_ReturnMinerals_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_Interrupted {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_Interrupted_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_EnterTransport {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_EnterTransport_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_PickupIdle {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_PickupIdle_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_PickupTransport {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_PickupTransport_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_PickupBunker {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_PickupBunker_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_Pickup4 {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_Pickup4_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_PowerupIdle {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_PowerupIdle_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_Sieging {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_Sieging_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_Unsieging {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_Unsieging_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_InitCreepGrowth {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_InitCreepGrowth_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_SpreadCreep {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_SpreadCreep_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_StoppingCreepGrowth {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_StoppingCreepGrowth_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_GuardianAspect {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_GuardianAspect_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_ArchonWarp {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_ArchonWarp_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_CompletingArchonsummon {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_CompletingArchonsummon_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_HoldPosition {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_HoldPosition_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_Cloak {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_Cloak_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_Decloak {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_Decloak_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_Unload {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_Unload_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_MoveUnload {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_MoveUnload_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_FireYamatoGun {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_FireYamatoGun_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_CastLockdown {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_CastLockdown_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_Burrowing {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_Burrowing_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_Burrowed {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_Burrowed_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_Unburrowing {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_Unburrowing_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_CastDarkSwarm {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_CastDarkSwarm_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_CastParasite {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_CastParasite_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_CastSpawnBroodlings {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_CastSpawnBroodlings_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_CastEMPShockwave {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_CastEMPShockwave_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_NukeWait {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_NukeWait_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_NukeTrain {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_NukeTrain_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_NukeLaunch {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_NukeLaunch_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order NukePaint {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.NukePaint_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_NukeUnit {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_NukeUnit_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_CastNuclearStrike {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_CastNuclearStrike_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_NukeTrack {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_NukeTrack_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_CloakNearbyUnits {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_CloakNearbyUnits_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_PlaceMine {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_PlaceMine_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_RightClickAction {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_RightClickAction_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_CastRecall {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_CastRecall_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_TeleporttoLocation {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_TeleporttoLocation_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_CastScannerSweep {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_CastScannerSweep_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_Scanner {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_Scanner_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_CastDefensiveMatrix {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_CastDefensiveMatrix_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_CastPsionicStorm {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_CastPsionicStorm_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_CastIrradiate {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_CastIrradiate_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_CastPlague {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_CastPlague_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_CastConsume {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_CastConsume_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_CastEnsnare {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_CastEnsnare_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_CastStasisField {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_CastStasisField_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_CastHallucination {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_CastHallucination_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_Hallucination2 {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_Hallucination2_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_ResetCollision {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_ResetCollision_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_Patrol {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_Patrol_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_CTFCOPInit {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_CTFCOPInit_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order CTFCOPStarted {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.CTFCOPStarted_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_CTFCOP2 {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_CTFCOP2_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_ComputerAI {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_ComputerAI_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_AtkMoveEP {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_AtkMoveEP_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_HarassMove {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_HarassMove_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_AIPatrol {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_AIPatrol_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_GuardPost {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_GuardPost_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_RescuePassive {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_RescuePassive_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_Neutral {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_Neutral_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_ComputerReturn {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_ComputerReturn_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_SelfDestrucing {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_SelfDestrucing_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_Critter {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_Critter_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_HiddenGun {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_HiddenGun_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_OpenDoor {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_OpenDoor_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_CloseDoor {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_CloseDoor_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_HideTrap {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_HideTrap_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_RevealTrap {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_RevealTrap_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_Enabledoodad {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_Enabledoodad_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_Disabledoodad {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_Disabledoodad_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_Warpin {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_Warpin_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_Medic {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_Medic_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_MedicHeal1 {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_MedicHeal1_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_HealMove {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_HealMove_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_MedicHeal2 {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_MedicHeal2_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_CastRestoration {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_CastRestoration_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_CastDisruptionWeb {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_CastDisruptionWeb_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_CastMindControl {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_CastMindControl_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_DarkArchonMeld {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_DarkArchonMeld_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_CastFeedback {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_CastFeedback_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_CastOpticalFlare {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_CastOpticalFlare_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_CastMaelstrom {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_CastMaelstrom_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_JunkYardDog {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_JunkYardDog_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_Fatal {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_Fatal_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_None {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_None_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static Order Orders_Unknown {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Orders_Unknown_get();
      Order ret = (cPtr == global::System.IntPtr.Zero) ? null : new Order(cPtr, false);
      return ret;
    } 
  }

  public static PlayerType getPlayerType(string name) {
    PlayerType ret = new PlayerType(bwapiPINVOKE.getPlayerType(name), true);
    if (bwapiPINVOKE.SWIGPendingException.Pending) throw bwapiPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static PlayerTypeSet allPlayerTypes() {
    PlayerTypeSet ret = new PlayerTypeSet(bwapiPINVOKE.allPlayerTypes(), false);
    return ret;
  }

  public static void PlayerTypes_init() {
    bwapiPINVOKE.PlayerTypes_init();
  }

  public static PlayerType PlayerTypes_None {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.PlayerTypes_None_get();
      PlayerType ret = (cPtr == global::System.IntPtr.Zero) ? null : new PlayerType(cPtr, false);
      return ret;
    } 
  }

  public static PlayerType PlayerTypes_Computer {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.PlayerTypes_Computer_get();
      PlayerType ret = (cPtr == global::System.IntPtr.Zero) ? null : new PlayerType(cPtr, false);
      return ret;
    } 
  }

  public static PlayerType PlayerTypes_Player {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.PlayerTypes_Player_get();
      PlayerType ret = (cPtr == global::System.IntPtr.Zero) ? null : new PlayerType(cPtr, false);
      return ret;
    } 
  }

  public static PlayerType PlayerTypes_RescuePassive {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.PlayerTypes_RescuePassive_get();
      PlayerType ret = (cPtr == global::System.IntPtr.Zero) ? null : new PlayerType(cPtr, false);
      return ret;
    } 
  }

  public static PlayerType PlayerTypes_EitherPreferComputer {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.PlayerTypes_EitherPreferComputer_get();
      PlayerType ret = (cPtr == global::System.IntPtr.Zero) ? null : new PlayerType(cPtr, false);
      return ret;
    } 
  }

  public static PlayerType PlayerTypes_EitherPreferHuman {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.PlayerTypes_EitherPreferHuman_get();
      PlayerType ret = (cPtr == global::System.IntPtr.Zero) ? null : new PlayerType(cPtr, false);
      return ret;
    } 
  }

  public static PlayerType PlayerTypes_Neutral {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.PlayerTypes_Neutral_get();
      PlayerType ret = (cPtr == global::System.IntPtr.Zero) ? null : new PlayerType(cPtr, false);
      return ret;
    } 
  }

  public static PlayerType PlayerTypes_Closed {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.PlayerTypes_Closed_get();
      PlayerType ret = (cPtr == global::System.IntPtr.Zero) ? null : new PlayerType(cPtr, false);
      return ret;
    } 
  }

  public static PlayerType PlayerTypes_PlayerLeft {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.PlayerTypes_PlayerLeft_get();
      PlayerType ret = (cPtr == global::System.IntPtr.Zero) ? null : new PlayerType(cPtr, false);
      return ret;
    } 
  }

  public static PlayerType PlayerTypes_ComputerLeft {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.PlayerTypes_ComputerLeft_get();
      PlayerType ret = (cPtr == global::System.IntPtr.Zero) ? null : new PlayerType(cPtr, false);
      return ret;
    } 
  }

  public static PlayerType PlayerTypes_Unknown {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.PlayerTypes_Unknown_get();
      PlayerType ret = (cPtr == global::System.IntPtr.Zero) ? null : new PlayerType(cPtr, false);
      return ret;
    } 
  }

  public static BulletType getBulletType(string name) {
    BulletType ret = new BulletType(bwapiPINVOKE.getBulletType(name), true);
    if (bwapiPINVOKE.SWIGPendingException.Pending) throw bwapiPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static BulletTypeSet allBulletTypes() {
    BulletTypeSet ret = new BulletTypeSet(bwapiPINVOKE.allBulletTypes(), false);
    return ret;
  }

  public static void init() {
    bwapiPINVOKE.init();
  }

  public static BulletType Melee {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Melee_get();
      BulletType ret = (cPtr == global::System.IntPtr.Zero) ? null : new BulletType(cPtr, false);
      return ret;
    } 
  }

  public static BulletType Fusion_Cutter_Hit {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Fusion_Cutter_Hit_get();
      BulletType ret = (cPtr == global::System.IntPtr.Zero) ? null : new BulletType(cPtr, false);
      return ret;
    } 
  }

  public static BulletType Gauss_Rifle_Hit {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Gauss_Rifle_Hit_get();
      BulletType ret = (cPtr == global::System.IntPtr.Zero) ? null : new BulletType(cPtr, false);
      return ret;
    } 
  }

  public static BulletType C_10_Canister_Rifle_Hit {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.C_10_Canister_Rifle_Hit_get();
      BulletType ret = (cPtr == global::System.IntPtr.Zero) ? null : new BulletType(cPtr, false);
      return ret;
    } 
  }

  public static BulletType Gemini_Missiles {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Gemini_Missiles_get();
      BulletType ret = (cPtr == global::System.IntPtr.Zero) ? null : new BulletType(cPtr, false);
      return ret;
    } 
  }

  public static BulletType Fragmentation_Grenade {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Fragmentation_Grenade_get();
      BulletType ret = (cPtr == global::System.IntPtr.Zero) ? null : new BulletType(cPtr, false);
      return ret;
    } 
  }

  public static BulletType Longbolt_Missile {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Longbolt_Missile_get();
      BulletType ret = (cPtr == global::System.IntPtr.Zero) ? null : new BulletType(cPtr, false);
      return ret;
    } 
  }

  public static BulletType ATS_ATA_Laser_Battery {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.ATS_ATA_Laser_Battery_get();
      BulletType ret = (cPtr == global::System.IntPtr.Zero) ? null : new BulletType(cPtr, false);
      return ret;
    } 
  }

  public static BulletType Burst_Lasers {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Burst_Lasers_get();
      BulletType ret = (cPtr == global::System.IntPtr.Zero) ? null : new BulletType(cPtr, false);
      return ret;
    } 
  }

  public static BulletType Arclite_Shock_Cannon_Hit {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Arclite_Shock_Cannon_Hit_get();
      BulletType ret = (cPtr == global::System.IntPtr.Zero) ? null : new BulletType(cPtr, false);
      return ret;
    } 
  }

  public static BulletType EMP_Missile {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.EMP_Missile_get();
      BulletType ret = (cPtr == global::System.IntPtr.Zero) ? null : new BulletType(cPtr, false);
      return ret;
    } 
  }

  public static BulletType Dual_Photon_Blasters_Hit {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Dual_Photon_Blasters_Hit_get();
      BulletType ret = (cPtr == global::System.IntPtr.Zero) ? null : new BulletType(cPtr, false);
      return ret;
    } 
  }

  public static BulletType Particle_Beam_Hit {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Particle_Beam_Hit_get();
      BulletType ret = (cPtr == global::System.IntPtr.Zero) ? null : new BulletType(cPtr, false);
      return ret;
    } 
  }

  public static BulletType Anti_Matter_Missile {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Anti_Matter_Missile_get();
      BulletType ret = (cPtr == global::System.IntPtr.Zero) ? null : new BulletType(cPtr, false);
      return ret;
    } 
  }

  public static BulletType Pulse_Cannon {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Pulse_Cannon_get();
      BulletType ret = (cPtr == global::System.IntPtr.Zero) ? null : new BulletType(cPtr, false);
      return ret;
    } 
  }

  public static BulletType Psionic_Shockwave_Hit {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Psionic_Shockwave_Hit_get();
      BulletType ret = (cPtr == global::System.IntPtr.Zero) ? null : new BulletType(cPtr, false);
      return ret;
    } 
  }

  public static BulletType Psionic_Storm {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Psionic_Storm_get();
      BulletType ret = (cPtr == global::System.IntPtr.Zero) ? null : new BulletType(cPtr, false);
      return ret;
    } 
  }

  public static BulletType Yamato_Gun {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Yamato_Gun_get();
      BulletType ret = (cPtr == global::System.IntPtr.Zero) ? null : new BulletType(cPtr, false);
      return ret;
    } 
  }

  public static BulletType Phase_Disruptor {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Phase_Disruptor_get();
      BulletType ret = (cPtr == global::System.IntPtr.Zero) ? null : new BulletType(cPtr, false);
      return ret;
    } 
  }

  public static BulletType STA_STS_Cannon_Overlay {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.STA_STS_Cannon_Overlay_get();
      BulletType ret = (cPtr == global::System.IntPtr.Zero) ? null : new BulletType(cPtr, false);
      return ret;
    } 
  }

  public static BulletType Sunken_Colony_Tentacle {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Sunken_Colony_Tentacle_get();
      BulletType ret = (cPtr == global::System.IntPtr.Zero) ? null : new BulletType(cPtr, false);
      return ret;
    } 
  }

  public static BulletType Acid_Spore {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Acid_Spore_get();
      BulletType ret = (cPtr == global::System.IntPtr.Zero) ? null : new BulletType(cPtr, false);
      return ret;
    } 
  }

  public static BulletType Glave_Wurm {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Glave_Wurm_get();
      BulletType ret = (cPtr == global::System.IntPtr.Zero) ? null : new BulletType(cPtr, false);
      return ret;
    } 
  }

  public static BulletType Seeker_Spores {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Seeker_Spores_get();
      BulletType ret = (cPtr == global::System.IntPtr.Zero) ? null : new BulletType(cPtr, false);
      return ret;
    } 
  }

  public static BulletType Queen_Spell_Carrier {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Queen_Spell_Carrier_get();
      BulletType ret = (cPtr == global::System.IntPtr.Zero) ? null : new BulletType(cPtr, false);
      return ret;
    } 
  }

  public static BulletType Plague_Cloud {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Plague_Cloud_get();
      BulletType ret = (cPtr == global::System.IntPtr.Zero) ? null : new BulletType(cPtr, false);
      return ret;
    } 
  }

  public static BulletType Consume {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Consume_get();
      BulletType ret = (cPtr == global::System.IntPtr.Zero) ? null : new BulletType(cPtr, false);
      return ret;
    } 
  }

  public static BulletType Ensnare {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Ensnare_get();
      BulletType ret = (cPtr == global::System.IntPtr.Zero) ? null : new BulletType(cPtr, false);
      return ret;
    } 
  }

  public static BulletType Needle_Spine_Hit {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Needle_Spine_Hit_get();
      BulletType ret = (cPtr == global::System.IntPtr.Zero) ? null : new BulletType(cPtr, false);
      return ret;
    } 
  }

  public static BulletType Invisible {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Invisible_get();
      BulletType ret = (cPtr == global::System.IntPtr.Zero) ? null : new BulletType(cPtr, false);
      return ret;
    } 
  }

  public static BulletType Optical_Flare_Grenade {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Optical_Flare_Grenade_get();
      BulletType ret = (cPtr == global::System.IntPtr.Zero) ? null : new BulletType(cPtr, false);
      return ret;
    } 
  }

  public static BulletType Halo_Rockets {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Halo_Rockets_get();
      BulletType ret = (cPtr == global::System.IntPtr.Zero) ? null : new BulletType(cPtr, false);
      return ret;
    } 
  }

  public static BulletType Subterranean_Spines {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Subterranean_Spines_get();
      BulletType ret = (cPtr == global::System.IntPtr.Zero) ? null : new BulletType(cPtr, false);
      return ret;
    } 
  }

  public static BulletType Corrosive_Acid_Shot {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Corrosive_Acid_Shot_get();
      BulletType ret = (cPtr == global::System.IntPtr.Zero) ? null : new BulletType(cPtr, false);
      return ret;
    } 
  }

  public static BulletType Neutron_Flare {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Neutron_Flare_get();
      BulletType ret = (cPtr == global::System.IntPtr.Zero) ? null : new BulletType(cPtr, false);
      return ret;
    } 
  }

  public static BulletType None {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.None_get();
      BulletType ret = (cPtr == global::System.IntPtr.Zero) ? null : new BulletType(cPtr, false);
      return ret;
    } 
  }

  public static BulletType Unknown {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Unknown_get();
      BulletType ret = (cPtr == global::System.IntPtr.Zero) ? null : new BulletType(cPtr, false);
      return ret;
    } 
  }

  public static TilePosition TilePositions_Invalid {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.TilePositions_Invalid_get();
      TilePosition ret = (cPtr == global::System.IntPtr.Zero) ? null : new TilePosition(cPtr, false);
      return ret;
    } 
  }

  public static TilePosition TilePositions_None {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.TilePositions_None_get();
      TilePosition ret = (cPtr == global::System.IntPtr.Zero) ? null : new TilePosition(cPtr, false);
      return ret;
    } 
  }

  public static TilePosition TilePositions_Unknown {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.TilePositions_Unknown_get();
      TilePosition ret = (cPtr == global::System.IntPtr.Zero) ? null : new TilePosition(cPtr, false);
      return ret;
    } 
  }

  public static UnitCommandType getUnitCommandType(string name) {
    UnitCommandType ret = new UnitCommandType(bwapiPINVOKE.getUnitCommandType(name), true);
    if (bwapiPINVOKE.SWIGPendingException.Pending) throw bwapiPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static UnitCommandTypeSet allUnitCommandTypes() {
    UnitCommandTypeSet ret = new UnitCommandTypeSet(bwapiPINVOKE.allUnitCommandTypes(), false);
    return ret;
  }

  public static void UnitCommandTypes_init() {
    bwapiPINVOKE.UnitCommandTypes_init();
  }

  public static UnitCommandType UnitCommandTypes_Attack_Move {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitCommandTypes_Attack_Move_get();
      UnitCommandType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitCommandType(cPtr, false);
      return ret;
    } 
  }

  public static UnitCommandType UnitCommandTypes_Attack_Unit {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitCommandTypes_Attack_Unit_get();
      UnitCommandType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitCommandType(cPtr, false);
      return ret;
    } 
  }

  public static UnitCommandType UnitCommandTypes_Build {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitCommandTypes_Build_get();
      UnitCommandType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitCommandType(cPtr, false);
      return ret;
    } 
  }

  public static UnitCommandType UnitCommandTypes_Build_Addon {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitCommandTypes_Build_Addon_get();
      UnitCommandType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitCommandType(cPtr, false);
      return ret;
    } 
  }

  public static UnitCommandType UnitCommandTypes_Train {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitCommandTypes_Train_get();
      UnitCommandType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitCommandType(cPtr, false);
      return ret;
    } 
  }

  public static UnitCommandType UnitCommandTypes_Morph {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitCommandTypes_Morph_get();
      UnitCommandType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitCommandType(cPtr, false);
      return ret;
    } 
  }

  public static UnitCommandType UnitCommandTypes_Research {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitCommandTypes_Research_get();
      UnitCommandType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitCommandType(cPtr, false);
      return ret;
    } 
  }

  public static UnitCommandType UnitCommandTypes_Upgrade {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitCommandTypes_Upgrade_get();
      UnitCommandType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitCommandType(cPtr, false);
      return ret;
    } 
  }

  public static UnitCommandType UnitCommandTypes_Set_Rally_Position {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitCommandTypes_Set_Rally_Position_get();
      UnitCommandType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitCommandType(cPtr, false);
      return ret;
    } 
  }

  public static UnitCommandType UnitCommandTypes_Set_Rally_Unit {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitCommandTypes_Set_Rally_Unit_get();
      UnitCommandType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitCommandType(cPtr, false);
      return ret;
    } 
  }

  public static UnitCommandType UnitCommandTypes_Move {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitCommandTypes_Move_get();
      UnitCommandType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitCommandType(cPtr, false);
      return ret;
    } 
  }

  public static UnitCommandType UnitCommandTypes_Patrol {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitCommandTypes_Patrol_get();
      UnitCommandType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitCommandType(cPtr, false);
      return ret;
    } 
  }

  public static UnitCommandType UnitCommandTypes_Hold_Position {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitCommandTypes_Hold_Position_get();
      UnitCommandType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitCommandType(cPtr, false);
      return ret;
    } 
  }

  public static UnitCommandType UnitCommandTypes_Stop {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitCommandTypes_Stop_get();
      UnitCommandType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitCommandType(cPtr, false);
      return ret;
    } 
  }

  public static UnitCommandType UnitCommandTypes_Follow {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitCommandTypes_Follow_get();
      UnitCommandType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitCommandType(cPtr, false);
      return ret;
    } 
  }

  public static UnitCommandType UnitCommandTypes_Gather {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitCommandTypes_Gather_get();
      UnitCommandType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitCommandType(cPtr, false);
      return ret;
    } 
  }

  public static UnitCommandType UnitCommandTypes_Return_Cargo {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitCommandTypes_Return_Cargo_get();
      UnitCommandType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitCommandType(cPtr, false);
      return ret;
    } 
  }

  public static UnitCommandType UnitCommandTypes_Repair {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitCommandTypes_Repair_get();
      UnitCommandType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitCommandType(cPtr, false);
      return ret;
    } 
  }

  public static UnitCommandType UnitCommandTypes_Burrow {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitCommandTypes_Burrow_get();
      UnitCommandType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitCommandType(cPtr, false);
      return ret;
    } 
  }

  public static UnitCommandType UnitCommandTypes_Unburrow {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitCommandTypes_Unburrow_get();
      UnitCommandType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitCommandType(cPtr, false);
      return ret;
    } 
  }

  public static UnitCommandType UnitCommandTypes_Cloak {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitCommandTypes_Cloak_get();
      UnitCommandType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitCommandType(cPtr, false);
      return ret;
    } 
  }

  public static UnitCommandType UnitCommandTypes_Decloak {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitCommandTypes_Decloak_get();
      UnitCommandType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitCommandType(cPtr, false);
      return ret;
    } 
  }

  public static UnitCommandType UnitCommandTypes_Siege {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitCommandTypes_Siege_get();
      UnitCommandType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitCommandType(cPtr, false);
      return ret;
    } 
  }

  public static UnitCommandType UnitCommandTypes_Unsiege {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitCommandTypes_Unsiege_get();
      UnitCommandType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitCommandType(cPtr, false);
      return ret;
    } 
  }

  public static UnitCommandType UnitCommandTypes_Lift {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitCommandTypes_Lift_get();
      UnitCommandType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitCommandType(cPtr, false);
      return ret;
    } 
  }

  public static UnitCommandType UnitCommandTypes_Land {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitCommandTypes_Land_get();
      UnitCommandType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitCommandType(cPtr, false);
      return ret;
    } 
  }

  public static UnitCommandType UnitCommandTypes_Load {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitCommandTypes_Load_get();
      UnitCommandType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitCommandType(cPtr, false);
      return ret;
    } 
  }

  public static UnitCommandType UnitCommandTypes_Unload {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitCommandTypes_Unload_get();
      UnitCommandType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitCommandType(cPtr, false);
      return ret;
    } 
  }

  public static UnitCommandType UnitCommandTypes_Unload_All {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitCommandTypes_Unload_All_get();
      UnitCommandType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitCommandType(cPtr, false);
      return ret;
    } 
  }

  public static UnitCommandType UnitCommandTypes_Unload_All_Position {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitCommandTypes_Unload_All_Position_get();
      UnitCommandType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitCommandType(cPtr, false);
      return ret;
    } 
  }

  public static UnitCommandType UnitCommandTypes_Right_Click_Position {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitCommandTypes_Right_Click_Position_get();
      UnitCommandType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitCommandType(cPtr, false);
      return ret;
    } 
  }

  public static UnitCommandType UnitCommandTypes_Right_Click_Unit {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitCommandTypes_Right_Click_Unit_get();
      UnitCommandType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitCommandType(cPtr, false);
      return ret;
    } 
  }

  public static UnitCommandType UnitCommandTypes_Halt_Construction {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitCommandTypes_Halt_Construction_get();
      UnitCommandType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitCommandType(cPtr, false);
      return ret;
    } 
  }

  public static UnitCommandType UnitCommandTypes_Cancel_Construction {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitCommandTypes_Cancel_Construction_get();
      UnitCommandType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitCommandType(cPtr, false);
      return ret;
    } 
  }

  public static UnitCommandType UnitCommandTypes_Cancel_Addon {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitCommandTypes_Cancel_Addon_get();
      UnitCommandType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitCommandType(cPtr, false);
      return ret;
    } 
  }

  public static UnitCommandType UnitCommandTypes_Cancel_Train {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitCommandTypes_Cancel_Train_get();
      UnitCommandType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitCommandType(cPtr, false);
      return ret;
    } 
  }

  public static UnitCommandType UnitCommandTypes_Cancel_Train_Slot {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitCommandTypes_Cancel_Train_Slot_get();
      UnitCommandType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitCommandType(cPtr, false);
      return ret;
    } 
  }

  public static UnitCommandType UnitCommandTypes_Cancel_Morph {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitCommandTypes_Cancel_Morph_get();
      UnitCommandType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitCommandType(cPtr, false);
      return ret;
    } 
  }

  public static UnitCommandType UnitCommandTypes_Cancel_Research {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitCommandTypes_Cancel_Research_get();
      UnitCommandType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitCommandType(cPtr, false);
      return ret;
    } 
  }

  public static UnitCommandType UnitCommandTypes_Cancel_Upgrade {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitCommandTypes_Cancel_Upgrade_get();
      UnitCommandType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitCommandType(cPtr, false);
      return ret;
    } 
  }

  public static UnitCommandType UnitCommandTypes_Use_Tech {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitCommandTypes_Use_Tech_get();
      UnitCommandType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitCommandType(cPtr, false);
      return ret;
    } 
  }

  public static UnitCommandType UnitCommandTypes_Use_Tech_Position {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitCommandTypes_Use_Tech_Position_get();
      UnitCommandType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitCommandType(cPtr, false);
      return ret;
    } 
  }

  public static UnitCommandType UnitCommandTypes_Use_Tech_Unit {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitCommandTypes_Use_Tech_Unit_get();
      UnitCommandType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitCommandType(cPtr, false);
      return ret;
    } 
  }

  public static UnitCommandType Place_COP {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Place_COP_get();
      UnitCommandType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitCommandType(cPtr, false);
      return ret;
    } 
  }

  public static UnitCommandType UnitCommandTypes_None {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitCommandTypes_None_get();
      UnitCommandType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitCommandType(cPtr, false);
      return ret;
    } 
  }

  public static UnitCommandType UnitCommandTypes_Unknown {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitCommandTypes_Unknown_get();
      UnitCommandType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitCommandType(cPtr, false);
      return ret;
    } 
  }

  public static Game Broodwar {
    set {
      bwapiPINVOKE.Broodwar_set(Game.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Broodwar_get();
      Game ret = (cPtr == global::System.IntPtr.Zero) ? null : new Game(cPtr, false);
      return ret;
    } 
  }

  public static UnitSizeType getUnitSizeType(string name) {
    UnitSizeType ret = new UnitSizeType(bwapiPINVOKE.getUnitSizeType(name), true);
    if (bwapiPINVOKE.SWIGPendingException.Pending) throw bwapiPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static UnitSizeTypeSet allUnitSizeTypes() {
    UnitSizeTypeSet ret = new UnitSizeTypeSet(bwapiPINVOKE.allUnitSizeTypes(), false);
    return ret;
  }

  public static void UnitSizeTypes_init() {
    bwapiPINVOKE.UnitSizeTypes_init();
  }

  public static UnitSizeType UnitSizeTypes_Independent {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitSizeTypes_Independent_get();
      UnitSizeType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitSizeType(cPtr, false);
      return ret;
    } 
  }

  public static UnitSizeType UnitSizeTypes_Small {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitSizeTypes_Small_get();
      UnitSizeType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitSizeType(cPtr, false);
      return ret;
    } 
  }

  public static UnitSizeType UnitSizeTypes_Medium {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitSizeTypes_Medium_get();
      UnitSizeType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitSizeType(cPtr, false);
      return ret;
    } 
  }

  public static UnitSizeType UnitSizeTypes_Large {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitSizeTypes_Large_get();
      UnitSizeType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitSizeType(cPtr, false);
      return ret;
    } 
  }

  public static UnitSizeType UnitSizeTypes_None {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitSizeTypes_None_get();
      UnitSizeType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitSizeType(cPtr, false);
      return ret;
    } 
  }

  public static UnitSizeType UnitSizeTypes_Unknown {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitSizeTypes_Unknown_get();
      UnitSizeType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitSizeType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType getUnitType(string name) {
    UnitType ret = new UnitType(bwapiPINVOKE.getUnitType(name), true);
    if (bwapiPINVOKE.SWIGPendingException.Pending) throw bwapiPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static int maxUnitWidth() {
    int ret = bwapiPINVOKE.maxUnitWidth();
    return ret;
  }

  public static int maxUnitHeight() {
    int ret = bwapiPINVOKE.maxUnitHeight();
    return ret;
  }

  public static UnitTypeSet allUnitTypes() {
    UnitTypeSet ret = new UnitTypeSet(bwapiPINVOKE.allUnitTypes(), false);
    return ret;
  }

  public static UnitTypeSet allMacroTypes() {
    UnitTypeSet ret = new UnitTypeSet(bwapiPINVOKE.allMacroTypes(), false);
    return ret;
  }

  public static void UnitTypes_init() {
    bwapiPINVOKE.UnitTypes_init();
  }

  public static UnitType UnitTypes_Terran_Marine {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Terran_Marine_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType Hero_Jim_Raynor_Marine {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Hero_Jim_Raynor_Marine_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Terran_Ghost {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Terran_Ghost_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType Hero_Sarah_Kerrigan {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Hero_Sarah_Kerrigan_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType Hero_Samir_Duran {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Hero_Samir_Duran_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType Hero_Infested_Duran {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Hero_Infested_Duran_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType Hero_Alexei_Stukov {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Hero_Alexei_Stukov_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Terran_Vulture {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Terran_Vulture_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType Hero_Jim_Raynor_Vulture {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Hero_Jim_Raynor_Vulture_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Terran_Goliath {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Terran_Goliath_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType Hero_Alan_Schezar {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Hero_Alan_Schezar_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Terran_Siege_Tank_Tank_Mode {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Terran_Siege_Tank_Tank_Mode_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType Hero_Edmund_Duke_Tank_Mode {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Hero_Edmund_Duke_Tank_Mode_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Terran_SCV {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Terran_SCV_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Terran_Wraith {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Terran_Wraith_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType Hero_Tom_Kazansky {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Hero_Tom_Kazansky_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Terran_Science_Vessel {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Terran_Science_Vessel_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType Hero_Magellan {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Hero_Magellan_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Terran_Dropship {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Terran_Dropship_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Terran_Battlecruiser {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Terran_Battlecruiser_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType Hero_Arcturus_Mengsk {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Hero_Arcturus_Mengsk_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType Hero_Hyperion {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Hero_Hyperion_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType Hero_Norad_II {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Hero_Norad_II_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType Hero_Gerard_DuGalle {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Hero_Gerard_DuGalle_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Terran_Vulture_Spider_Mine {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Terran_Vulture_Spider_Mine_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Terran_Nuclear_Missile {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Terran_Nuclear_Missile_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Terran_Siege_Tank_Siege_Mode {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Terran_Siege_Tank_Siege_Mode_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType Hero_Edmund_Duke_Siege_Mode {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Hero_Edmund_Duke_Siege_Mode_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Terran_Firebat {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Terran_Firebat_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType Hero_Gui_Montag {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Hero_Gui_Montag_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Spell_Scanner_Sweep {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Spell_Scanner_Sweep_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Terran_Medic {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Terran_Medic_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType Terran_Civilian {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Terran_Civilian_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Zerg_Larva {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Zerg_Larva_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Zerg_Egg {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Zerg_Egg_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Zerg_Zergling {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Zerg_Zergling_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType Hero_Devouring_One {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Hero_Devouring_One_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType Hero_Infested_Kerrigan {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Hero_Infested_Kerrigan_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Zerg_Hydralisk {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Zerg_Hydralisk_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType Hero_Hunter_Killer {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Hero_Hunter_Killer_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Zerg_Ultralisk {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Zerg_Ultralisk_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType Hero_Torrasque {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Hero_Torrasque_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Zerg_Broodling {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Zerg_Broodling_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Zerg_Drone {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Zerg_Drone_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Zerg_Overlord {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Zerg_Overlord_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType Hero_Yggdrasill {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Hero_Yggdrasill_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Zerg_Mutalisk {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Zerg_Mutalisk_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType Hero_Kukulza_Mutalisk {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Hero_Kukulza_Mutalisk_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Zerg_Guardian {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Zerg_Guardian_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType Hero_Kukulza_Guardian {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Hero_Kukulza_Guardian_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Zerg_Queen {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Zerg_Queen_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType Hero_Matriarch {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Hero_Matriarch_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Zerg_Defiler {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Zerg_Defiler_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType Hero_Unclean_One {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Hero_Unclean_One_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Zerg_Scourge {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Zerg_Scourge_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Zerg_Infested_Terran {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Zerg_Infested_Terran_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Terran_Valkyrie {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Terran_Valkyrie_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Zerg_Cocoon {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Zerg_Cocoon_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Protoss_Corsair {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Protoss_Corsair_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType Hero_Raszagal {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Hero_Raszagal_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Protoss_Dark_Templar {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Protoss_Dark_Templar_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType Hero_Dark_Templar {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Hero_Dark_Templar_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType Hero_Zeratul {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Hero_Zeratul_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Zerg_Devourer {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Zerg_Devourer_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Protoss_Dark_Archon {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Protoss_Dark_Archon_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Protoss_Probe {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Protoss_Probe_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Protoss_Zealot {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Protoss_Zealot_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType Hero_Fenix_Zealot {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Hero_Fenix_Zealot_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Protoss_Dragoon {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Protoss_Dragoon_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType Hero_Fenix_Dragoon {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Hero_Fenix_Dragoon_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Protoss_High_Templar {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Protoss_High_Templar_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType Hero_Tassadar {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Hero_Tassadar_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType Hero_Aldaris {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Hero_Aldaris_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Protoss_Archon {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Protoss_Archon_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType Hero_Tassadar_Zeratul_Archon {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Hero_Tassadar_Zeratul_Archon_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Protoss_Shuttle {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Protoss_Shuttle_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Protoss_Scout {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Protoss_Scout_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType Hero_Mojo {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Hero_Mojo_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType Hero_Artanis {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Hero_Artanis_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Protoss_Arbiter {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Protoss_Arbiter_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType Hero_Danimoth {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Hero_Danimoth_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Protoss_Carrier {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Protoss_Carrier_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType Hero_Gantrithor {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Hero_Gantrithor_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Protoss_Interceptor {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Protoss_Interceptor_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Protoss_Reaver {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Protoss_Reaver_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType Hero_Warbringer {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Hero_Warbringer_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Protoss_Observer {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Protoss_Observer_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Protoss_Scarab {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Protoss_Scarab_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Critter_Rhynadon {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Critter_Rhynadon_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Critter_Bengalaas {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Critter_Bengalaas_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Special_Cargo_Ship {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Special_Cargo_Ship_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Special_Mercenary_Gunship {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Special_Mercenary_Gunship_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Critter_Scantid {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Critter_Scantid_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Critter_Kakaru {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Critter_Kakaru_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Critter_Ragnasaur {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Critter_Ragnasaur_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Critter_Ursadon {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Critter_Ursadon_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Zerg_Lurker_Egg {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Zerg_Lurker_Egg_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Zerg_Lurker {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Zerg_Lurker_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Spell_Disruption_Web {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Spell_Disruption_Web_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Terran_Command_Center {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Terran_Command_Center_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Terran_Comsat_Station {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Terran_Comsat_Station_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Terran_Nuclear_Silo {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Terran_Nuclear_Silo_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Terran_Supply_Depot {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Terran_Supply_Depot_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Terran_Refinery {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Terran_Refinery_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Terran_Barracks {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Terran_Barracks_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Terran_Academy {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Terran_Academy_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Terran_Factory {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Terran_Factory_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Terran_Starport {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Terran_Starport_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Terran_Control_Tower {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Terran_Control_Tower_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Terran_Science_Facility {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Terran_Science_Facility_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Terran_Covert_Ops {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Terran_Covert_Ops_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Terran_Physics_Lab {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Terran_Physics_Lab_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Terran_Machine_Shop {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Terran_Machine_Shop_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Terran_Engineering_Bay {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Terran_Engineering_Bay_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Terran_Armory {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Terran_Armory_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Terran_Missile_Turret {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Terran_Missile_Turret_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Terran_Bunker {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Terran_Bunker_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Special_Crashed_Norad_II {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Special_Crashed_Norad_II_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Special_Ion_Cannon {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Special_Ion_Cannon_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Zerg_Infested_Command_Center {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Zerg_Infested_Command_Center_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Zerg_Hatchery {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Zerg_Hatchery_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Zerg_Lair {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Zerg_Lair_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Zerg_Hive {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Zerg_Hive_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Zerg_Nydus_Canal {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Zerg_Nydus_Canal_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Zerg_Hydralisk_Den {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Zerg_Hydralisk_Den_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Zerg_Defiler_Mound {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Zerg_Defiler_Mound_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Zerg_Greater_Spire {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Zerg_Greater_Spire_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Zerg_Queens_Nest {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Zerg_Queens_Nest_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Zerg_Evolution_Chamber {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Zerg_Evolution_Chamber_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Zerg_Ultralisk_Cavern {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Zerg_Ultralisk_Cavern_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Zerg_Spire {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Zerg_Spire_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Zerg_Spawning_Pool {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Zerg_Spawning_Pool_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Zerg_Creep_Colony {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Zerg_Creep_Colony_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Zerg_Spore_Colony {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Zerg_Spore_Colony_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Zerg_Sunken_Colony {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Zerg_Sunken_Colony_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Special_Overmind_With_Shell {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Special_Overmind_With_Shell_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Special_Overmind {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Special_Overmind_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Zerg_Extractor {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Zerg_Extractor_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Special_Mature_Chrysalis {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Special_Mature_Chrysalis_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Special_Cerebrate {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Special_Cerebrate_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Special_Cerebrate_Daggoth {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Special_Cerebrate_Daggoth_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Protoss_Nexus {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Protoss_Nexus_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Protoss_Robotics_Facility {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Protoss_Robotics_Facility_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Protoss_Pylon {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Protoss_Pylon_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Protoss_Assimilator {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Protoss_Assimilator_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Protoss_Observatory {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Protoss_Observatory_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Protoss_Gateway {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Protoss_Gateway_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Protoss_Photon_Cannon {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Protoss_Photon_Cannon_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Protoss_Citadel_of_Adun {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Protoss_Citadel_of_Adun_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Protoss_Cybernetics_Core {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Protoss_Cybernetics_Core_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Protoss_Templar_Archives {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Protoss_Templar_Archives_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Protoss_Forge {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Protoss_Forge_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Protoss_Stargate {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Protoss_Stargate_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Special_Stasis_Cell_Prison {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Special_Stasis_Cell_Prison_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Protoss_Fleet_Beacon {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Protoss_Fleet_Beacon_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Protoss_Arbiter_Tribunal {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Protoss_Arbiter_Tribunal_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Protoss_Robotics_Support_Bay {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Protoss_Robotics_Support_Bay_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Protoss_Shield_Battery {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Protoss_Shield_Battery_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Special_Khaydarin_Crystal_Form {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Special_Khaydarin_Crystal_Form_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Special_Protoss_Temple {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Special_Protoss_Temple_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Special_XelNaga_Temple {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Special_XelNaga_Temple_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Resource_Mineral_Field {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Resource_Mineral_Field_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Resource_Mineral_Field_Type_2 {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Resource_Mineral_Field_Type_2_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Resource_Mineral_Field_Type_3 {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Resource_Mineral_Field_Type_3_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Special_Independant_Starport {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Special_Independant_Starport_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Resource_Vespene_Geyser {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Resource_Vespene_Geyser_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Special_Warp_Gate {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Special_Warp_Gate_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Special_Psi_Disrupter {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Special_Psi_Disrupter_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Special_Power_Generator {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Special_Power_Generator_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Special_Overmind_Cocoon {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Special_Overmind_Cocoon_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType Special_Zerg_Beacon {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Special_Zerg_Beacon_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType Special_Terran_Beacon {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Special_Terran_Beacon_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType Special_Protoss_Beacon {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Special_Protoss_Beacon_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType Special_Zerg_Flag_Beacon {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Special_Zerg_Flag_Beacon_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType Special_Terran_Flag_Beacon {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Special_Terran_Flag_Beacon_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType Special_Protoss_Flag_Beacon {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Special_Protoss_Flag_Beacon_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Spell_Dark_Swarm {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Spell_Dark_Swarm_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType Powerup_Uraj_Crystal {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Powerup_Uraj_Crystal_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType Powerup_Khalis_Crystal {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Powerup_Khalis_Crystal_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType Powerup_Flag {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Powerup_Flag_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType Powerup_Young_Chrysalis {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Powerup_Young_Chrysalis_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType Powerup_Psi_Emitter {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Powerup_Psi_Emitter_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType Powerup_Data_Disk {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Powerup_Data_Disk_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType Powerup_Khaydarin_Crystal {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Powerup_Khaydarin_Crystal_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Powerup_Mineral_Cluster_Type_1 {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Powerup_Mineral_Cluster_Type_1_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Powerup_Mineral_Cluster_Type_2 {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Powerup_Mineral_Cluster_Type_2_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Powerup_Protoss_Gas_Orb_Type_1 {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Powerup_Protoss_Gas_Orb_Type_1_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Powerup_Protoss_Gas_Orb_Type_2 {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Powerup_Protoss_Gas_Orb_Type_2_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Powerup_Zerg_Gas_Sac_Type_1 {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Powerup_Zerg_Gas_Sac_Type_1_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Powerup_Zerg_Gas_Sac_Type_2 {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Powerup_Zerg_Gas_Sac_Type_2_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Powerup_Terran_Gas_Tank_Type_1 {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Powerup_Terran_Gas_Tank_Type_1_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Powerup_Terran_Gas_Tank_Type_2 {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Powerup_Terran_Gas_Tank_Type_2_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType Special_Map_Revealer {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Special_Map_Revealer_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType Special_Floor_Missile_Trap {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Special_Floor_Missile_Trap_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType Special_Floor_Hatch {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Special_Floor_Hatch_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType Special_Upper_Level_Door {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Special_Upper_Level_Door_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType Special_Right_Upper_Level_Door {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Special_Right_Upper_Level_Door_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType Special_Pit_Door {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Special_Pit_Door_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType Special_Right_Pit_Door {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Special_Right_Pit_Door_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType Special_Floor_Gun_Trap {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Special_Floor_Gun_Trap_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType Special_Wall_Missile_Trap {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Special_Wall_Missile_Trap_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType Special_Wall_Flame_Trap {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Special_Wall_Flame_Trap_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType Special_Right_Wall_Missile_Trap {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Special_Right_Wall_Missile_Trap_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType Special_Right_Wall_Flame_Trap {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Special_Right_Wall_Flame_Trap_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType Special_Start_Location {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Special_Start_Location_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_None {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_None_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType AllUnits {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.AllUnits_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType Men {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Men_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType Buildings {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Buildings_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType Factories {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Factories_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static UnitType UnitTypes_Unknown {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.UnitTypes_Unknown_get();
      UnitType ret = (cPtr == global::System.IntPtr.Zero) ? null : new UnitType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType getWeaponType(string name) {
    WeaponType ret = new WeaponType(bwapiPINVOKE.getWeaponType(name), true);
    if (bwapiPINVOKE.SWIGPendingException.Pending) throw bwapiPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static WeaponTypeSet allWeaponTypes() {
    WeaponTypeSet ret = new WeaponTypeSet(bwapiPINVOKE.allWeaponTypes(), false);
    return ret;
  }

  public static WeaponTypeSet normalWeaponTypes() {
    WeaponTypeSet ret = new WeaponTypeSet(bwapiPINVOKE.normalWeaponTypes(), false);
    return ret;
  }

  public static WeaponTypeSet specialWeaponTypes() {
    WeaponTypeSet ret = new WeaponTypeSet(bwapiPINVOKE.specialWeaponTypes(), false);
    return ret;
  }

  public static void WeaponTypes_init() {
    bwapiPINVOKE.WeaponTypes_init();
  }

  public static WeaponType WeaponTypes_Gauss_Rifle {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.WeaponTypes_Gauss_Rifle_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType Gauss_Rifle_Jim_Raynor {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Gauss_Rifle_Jim_Raynor_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType WeaponTypes_C_10_Canister_Rifle {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.WeaponTypes_C_10_Canister_Rifle_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType C_10_Canister_Rifle_Sarah_Kerrigan {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.C_10_Canister_Rifle_Sarah_Kerrigan_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType C_10_Canister_Rifle_Samir_Duran {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.C_10_Canister_Rifle_Samir_Duran_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType C_10_Canister_Rifle_Infested_Duran {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.C_10_Canister_Rifle_Infested_Duran_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType C_10_Canister_Rifle_Alexei_Stukov {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.C_10_Canister_Rifle_Alexei_Stukov_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType WeaponTypes_Fragmentation_Grenade {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.WeaponTypes_Fragmentation_Grenade_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType Fragmentation_Grenade_Jim_Raynor {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Fragmentation_Grenade_Jim_Raynor_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType WeaponTypes_Spider_Mines {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.WeaponTypes_Spider_Mines_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType WeaponTypes_Twin_Autocannons {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.WeaponTypes_Twin_Autocannons_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType Twin_Autocannons_Alan_Schezar {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Twin_Autocannons_Alan_Schezar_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType WeaponTypes_Hellfire_Missile_Pack {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.WeaponTypes_Hellfire_Missile_Pack_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType Hellfire_Missile_Pack_Alan_Schezar {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Hellfire_Missile_Pack_Alan_Schezar_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType WeaponTypes_Arclite_Cannon {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.WeaponTypes_Arclite_Cannon_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType Arclite_Cannon_Edmund_Duke {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Arclite_Cannon_Edmund_Duke_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType WeaponTypes_Fusion_Cutter {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.WeaponTypes_Fusion_Cutter_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType WeaponTypes_Gemini_Missiles {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.WeaponTypes_Gemini_Missiles_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType Gemini_Missiles_Tom_Kazansky {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Gemini_Missiles_Tom_Kazansky_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType WeaponTypes_Burst_Lasers {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.WeaponTypes_Burst_Lasers_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType Burst_Lasers_Tom_Kazansky {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Burst_Lasers_Tom_Kazansky_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType WeaponTypes_ATS_Laser_Battery {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.WeaponTypes_ATS_Laser_Battery_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType ATS_Laser_Battery_Hero {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.ATS_Laser_Battery_Hero_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType ATS_Laser_Battery_Hyperion {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.ATS_Laser_Battery_Hyperion_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType WeaponTypes_ATA_Laser_Battery {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.WeaponTypes_ATA_Laser_Battery_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType ATA_Laser_Battery_Hero {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.ATA_Laser_Battery_Hero_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType ATA_Laser_Battery_Hyperion {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.ATA_Laser_Battery_Hyperion_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType WeaponTypes_Flame_Thrower {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.WeaponTypes_Flame_Thrower_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType Flame_Thrower_Gui_Montag {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Flame_Thrower_Gui_Montag_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType WeaponTypes_Arclite_Shock_Cannon {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.WeaponTypes_Arclite_Shock_Cannon_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType Arclite_Shock_Cannon_Edmund_Duke {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Arclite_Shock_Cannon_Edmund_Duke_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType WeaponTypes_Longbolt_Missile {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.WeaponTypes_Longbolt_Missile_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType WeaponTypes_Claws {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.WeaponTypes_Claws_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType Claws_Devouring_One {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Claws_Devouring_One_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType Claws_Infested_Kerrigan {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Claws_Infested_Kerrigan_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType WeaponTypes_Needle_Spines {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.WeaponTypes_Needle_Spines_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType Needle_Spines_Hunter_Killer {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Needle_Spines_Hunter_Killer_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType WeaponTypes_Kaiser_Blades {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.WeaponTypes_Kaiser_Blades_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType Kaiser_Blades_Torrasque {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Kaiser_Blades_Torrasque_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType WeaponTypes_Toxic_Spores {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.WeaponTypes_Toxic_Spores_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType WeaponTypes_Spines {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.WeaponTypes_Spines_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType WeaponTypes_Acid_Spore {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.WeaponTypes_Acid_Spore_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType Acid_Spore_Kukulza {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Acid_Spore_Kukulza_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType WeaponTypes_Glave_Wurm {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.WeaponTypes_Glave_Wurm_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType Glave_Wurm_Kukulza {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Glave_Wurm_Kukulza_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType WeaponTypes_Seeker_Spores {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.WeaponTypes_Seeker_Spores_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType WeaponTypes_Subterranean_Tentacle {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.WeaponTypes_Subterranean_Tentacle_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType WeaponTypes_Suicide_Infested_Terran {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.WeaponTypes_Suicide_Infested_Terran_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType WeaponTypes_Suicide_Scourge {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.WeaponTypes_Suicide_Scourge_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType WeaponTypes_Particle_Beam {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.WeaponTypes_Particle_Beam_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType WeaponTypes_Psi_Blades {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.WeaponTypes_Psi_Blades_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType Psi_Blades_Fenix {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Psi_Blades_Fenix_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType WeaponTypes_Phase_Disruptor {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.WeaponTypes_Phase_Disruptor_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType Phase_Disruptor_Fenix {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Phase_Disruptor_Fenix_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType Psi_Assault {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Psi_Assault_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType WeaponTypes_Psionic_Shockwave {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.WeaponTypes_Psionic_Shockwave_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType Psionic_Shockwave_TZ_Archon {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Psionic_Shockwave_TZ_Archon_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType WeaponTypes_Dual_Photon_Blasters {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.WeaponTypes_Dual_Photon_Blasters_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType Dual_Photon_Blasters_Mojo {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Dual_Photon_Blasters_Mojo_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType Dual_Photon_Blasters_Artanis {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Dual_Photon_Blasters_Artanis_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType WeaponTypes_Anti_Matter_Missiles {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.WeaponTypes_Anti_Matter_Missiles_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType Anti_Matter_Missiles_Mojo {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Anti_Matter_Missiles_Mojo_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType Anti_Matter_Missiles_Artanis {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Anti_Matter_Missiles_Artanis_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType WeaponTypes_Phase_Disruptor_Cannon {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.WeaponTypes_Phase_Disruptor_Cannon_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType Phase_Disruptor_Cannon_Danimoth {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Phase_Disruptor_Cannon_Danimoth_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType WeaponTypes_Pulse_Cannon {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.WeaponTypes_Pulse_Cannon_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType WeaponTypes_STS_Photon_Cannon {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.WeaponTypes_STS_Photon_Cannon_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType WeaponTypes_STA_Photon_Cannon {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.WeaponTypes_STA_Photon_Cannon_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType WeaponTypes_Scarab {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.WeaponTypes_Scarab_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType WeaponTypes_Neutron_Flare {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.WeaponTypes_Neutron_Flare_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType WeaponTypes_Halo_Rockets {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.WeaponTypes_Halo_Rockets_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType WeaponTypes_Corrosive_Acid {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.WeaponTypes_Corrosive_Acid_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType WeaponTypes_Subterranean_Spines {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.WeaponTypes_Subterranean_Spines_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType WeaponTypes_Warp_Blades {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.WeaponTypes_Warp_Blades_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType Warp_Blades_Hero {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Warp_Blades_Hero_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType Warp_Blades_Zeratul {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Warp_Blades_Zeratul_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType WeaponTypes_Independant_Laser_Battery {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.WeaponTypes_Independant_Laser_Battery_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType Twin_Autocannons_Floor_Trap {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Twin_Autocannons_Floor_Trap_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType Hellfire_Missile_Pack_Wall_Trap {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Hellfire_Missile_Pack_Wall_Trap_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType Flame_Thrower_Wall_Trap {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Flame_Thrower_Wall_Trap_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType Hellfire_Missile_Pack_Floor_Trap {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.Hellfire_Missile_Pack_Floor_Trap_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType WeaponTypes_Yamato_Gun {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.WeaponTypes_Yamato_Gun_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType WeaponTypes_Nuclear_Strike {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.WeaponTypes_Nuclear_Strike_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType WeaponTypes_Lockdown {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.WeaponTypes_Lockdown_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType WeaponTypes_EMP_Shockwave {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.WeaponTypes_EMP_Shockwave_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType WeaponTypes_Irradiate {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.WeaponTypes_Irradiate_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType WeaponTypes_Parasite {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.WeaponTypes_Parasite_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType WeaponTypes_Spawn_Broodlings {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.WeaponTypes_Spawn_Broodlings_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType WeaponTypes_Ensnare {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.WeaponTypes_Ensnare_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType WeaponTypes_Dark_Swarm {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.WeaponTypes_Dark_Swarm_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType WeaponTypes_Plague {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.WeaponTypes_Plague_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType WeaponTypes_Consume {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.WeaponTypes_Consume_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType WeaponTypes_Stasis_Field {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.WeaponTypes_Stasis_Field_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType WeaponTypes_Psionic_Storm {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.WeaponTypes_Psionic_Storm_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType WeaponTypes_Disruption_Web {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.WeaponTypes_Disruption_Web_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType WeaponTypes_Restoration {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.WeaponTypes_Restoration_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType WeaponTypes_Mind_Control {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.WeaponTypes_Mind_Control_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType WeaponTypes_Feedback {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.WeaponTypes_Feedback_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType WeaponTypes_Optical_Flare {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.WeaponTypes_Optical_Flare_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType WeaponTypes_Maelstrom {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.WeaponTypes_Maelstrom_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType WeaponTypes_None {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.WeaponTypes_None_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static WeaponType WeaponTypes_Unknown {
    get {
      global::System.IntPtr cPtr = bwapiPINVOKE.WeaponTypes_Unknown_get();
      WeaponType ret = (cPtr == global::System.IntPtr.Zero) ? null : new WeaponType(cPtr, false);
      return ret;
    } 
  }

  public static readonly int TILE_SIZE = bwapiPINVOKE.TILE_SIZE_get();
  public static readonly int BWAPI_UNIT_COMMAND_TYPE_COUNT = bwapiPINVOKE.BWAPI_UNIT_COMMAND_TYPE_COUNT_get();
  public static readonly int BWAPI_UNIT_TYPE_MAX_COUNT = bwapiPINVOKE.BWAPI_UNIT_TYPE_MAX_COUNT_get();
}

}
